

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jul 20 07:00:43 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext1,local,class=CONST,delta=2
    34                           	psect	swtext2,local,class=CONST,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  0008                     	;# 
    45  0009                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000D                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  011E                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020C                     	;# 
   120  020D                     	;# 
   121  0211                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0214                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0216                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0217                     	;# 
   136  0219                     	;# 
   137  021A                     	;# 
   138  021B                     	;# 
   139  021C                     	;# 
   140  021D                     	;# 
   141  021E                     	;# 
   142  021F                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029C                     	;# 
   157  029C                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029E                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  0394                     	;# 
   170  0395                     	;# 
   171  0396                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  041C                     	;# 
   181  041D                     	;# 
   182  041E                     	;# 
   183  0FE4                     	;# 
   184  0FE5                     	;# 
   185  0FE6                     	;# 
   186  0FE7                     	;# 
   187  0FE8                     	;# 
   188  0FE9                     	;# 
   189  0FEA                     	;# 
   190  0FEB                     	;# 
   191  0FED                     	;# 
   192  0FEE                     	;# 
   193  0FEF                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009B                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0113                     	;# 
   245  0114                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0117                     	;# 
   249  0118                     	;# 
   250  0119                     	;# 
   251  011A                     	;# 
   252  011B                     	;# 
   253  011D                     	;# 
   254  011E                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  0191                     	;# 
   258  0191                     	;# 
   259  0192                     	;# 
   260  0193                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0194                     	;# 
   264  0195                     	;# 
   265  0196                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019C                     	;# 
   274  019D                     	;# 
   275  019E                     	;# 
   276  019F                     	;# 
   277  020C                     	;# 
   278  020D                     	;# 
   279  0211                     	;# 
   280  0211                     	;# 
   281  0212                     	;# 
   282  0212                     	;# 
   283  0213                     	;# 
   284  0213                     	;# 
   285  0214                     	;# 
   286  0214                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0215                     	;# 
   290  0216                     	;# 
   291  0216                     	;# 
   292  0217                     	;# 
   293  0217                     	;# 
   294  0219                     	;# 
   295  021A                     	;# 
   296  021B                     	;# 
   297  021C                     	;# 
   298  021D                     	;# 
   299  021E                     	;# 
   300  021F                     	;# 
   301  0291                     	;# 
   302  0291                     	;# 
   303  0292                     	;# 
   304  0293                     	;# 
   305  0294                     	;# 
   306  0295                     	;# 
   307  0295                     	;# 
   308  0296                     	;# 
   309  0298                     	;# 
   310  0298                     	;# 
   311  0299                     	;# 
   312  029A                     	;# 
   313  029B                     	;# 
   314  029C                     	;# 
   315  029C                     	;# 
   316  029D                     	;# 
   317  029E                     	;# 
   318  029E                     	;# 
   319  0311                     	;# 
   320  0311                     	;# 
   321  0312                     	;# 
   322  0313                     	;# 
   323  0318                     	;# 
   324  0318                     	;# 
   325  0319                     	;# 
   326  031A                     	;# 
   327  0394                     	;# 
   328  0395                     	;# 
   329  0396                     	;# 
   330  039A                     	;# 
   331  039C                     	;# 
   332  039D                     	;# 
   333  039E                     	;# 
   334  039F                     	;# 
   335  0415                     	;# 
   336  0416                     	;# 
   337  0417                     	;# 
   338  041C                     	;# 
   339  041D                     	;# 
   340  041E                     	;# 
   341  0FE4                     	;# 
   342  0FE5                     	;# 
   343  0FE6                     	;# 
   344  0FE7                     	;# 
   345  0FE8                     	;# 
   346  0FE9                     	;# 
   347  0FEA                     	;# 
   348  0FEB                     	;# 
   349  0FED                     	;# 
   350  0FEE                     	;# 
   351  0FEF                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0008                     	;# 
   361  0009                     	;# 
   362  000A                     	;# 
   363  000B                     	;# 
   364  000C                     	;# 
   365  000D                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0014                     	;# 
   370  0015                     	;# 
   371  0016                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001C                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0094                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  010C                     	;# 
   399  010D                     	;# 
   400  0111                     	;# 
   401  0112                     	;# 
   402  0113                     	;# 
   403  0114                     	;# 
   404  0115                     	;# 
   405  0116                     	;# 
   406  0117                     	;# 
   407  0118                     	;# 
   408  0119                     	;# 
   409  011A                     	;# 
   410  011B                     	;# 
   411  011D                     	;# 
   412  011E                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0191                     	;# 
   416  0191                     	;# 
   417  0192                     	;# 
   418  0193                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0194                     	;# 
   422  0195                     	;# 
   423  0196                     	;# 
   424  0199                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019C                     	;# 
   431  019C                     	;# 
   432  019D                     	;# 
   433  019E                     	;# 
   434  019F                     	;# 
   435  020C                     	;# 
   436  020D                     	;# 
   437  0211                     	;# 
   438  0211                     	;# 
   439  0212                     	;# 
   440  0212                     	;# 
   441  0213                     	;# 
   442  0213                     	;# 
   443  0214                     	;# 
   444  0214                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0215                     	;# 
   448  0216                     	;# 
   449  0216                     	;# 
   450  0217                     	;# 
   451  0217                     	;# 
   452  0219                     	;# 
   453  021A                     	;# 
   454  021B                     	;# 
   455  021C                     	;# 
   456  021D                     	;# 
   457  021E                     	;# 
   458  021F                     	;# 
   459  0291                     	;# 
   460  0291                     	;# 
   461  0292                     	;# 
   462  0293                     	;# 
   463  0294                     	;# 
   464  0295                     	;# 
   465  0295                     	;# 
   466  0296                     	;# 
   467  0298                     	;# 
   468  0298                     	;# 
   469  0299                     	;# 
   470  029A                     	;# 
   471  029B                     	;# 
   472  029C                     	;# 
   473  029C                     	;# 
   474  029D                     	;# 
   475  029E                     	;# 
   476  029E                     	;# 
   477  0311                     	;# 
   478  0311                     	;# 
   479  0312                     	;# 
   480  0313                     	;# 
   481  0318                     	;# 
   482  0318                     	;# 
   483  0319                     	;# 
   484  031A                     	;# 
   485  0394                     	;# 
   486  0395                     	;# 
   487  0396                     	;# 
   488  039A                     	;# 
   489  039C                     	;# 
   490  039D                     	;# 
   491  039E                     	;# 
   492  039F                     	;# 
   493  0415                     	;# 
   494  0416                     	;# 
   495  0417                     	;# 
   496  041C                     	;# 
   497  041D                     	;# 
   498  041E                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000D                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0015                     	;# 
   529  0016                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  0091                     	;# 
   542  0092                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011A                     	;# 
   568  011B                     	;# 
   569  011D                     	;# 
   570  011E                     	;# 
   571  018C                     	;# 
   572  018D                     	;# 
   573  0191                     	;# 
   574  0191                     	;# 
   575  0192                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019C                     	;# 
   589  019C                     	;# 
   590  019D                     	;# 
   591  019E                     	;# 
   592  019F                     	;# 
   593  020C                     	;# 
   594  020D                     	;# 
   595  0211                     	;# 
   596  0211                     	;# 
   597  0212                     	;# 
   598  0212                     	;# 
   599  0213                     	;# 
   600  0213                     	;# 
   601  0214                     	;# 
   602  0214                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0216                     	;# 
   607  0216                     	;# 
   608  0217                     	;# 
   609  0217                     	;# 
   610  0219                     	;# 
   611  021A                     	;# 
   612  021B                     	;# 
   613  021C                     	;# 
   614  021D                     	;# 
   615  021E                     	;# 
   616  021F                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0294                     	;# 
   622  0295                     	;# 
   623  0295                     	;# 
   624  0296                     	;# 
   625  0298                     	;# 
   626  0298                     	;# 
   627  0299                     	;# 
   628  029A                     	;# 
   629  029B                     	;# 
   630  029C                     	;# 
   631  029C                     	;# 
   632  029D                     	;# 
   633  029E                     	;# 
   634  029E                     	;# 
   635  0311                     	;# 
   636  0311                     	;# 
   637  0312                     	;# 
   638  0313                     	;# 
   639  0318                     	;# 
   640  0318                     	;# 
   641  0319                     	;# 
   642  031A                     	;# 
   643  0394                     	;# 
   644  0395                     	;# 
   645  0396                     	;# 
   646  039A                     	;# 
   647  039C                     	;# 
   648  039D                     	;# 
   649  039E                     	;# 
   650  039F                     	;# 
   651  0415                     	;# 
   652  0416                     	;# 
   653  0417                     	;# 
   654  041C                     	;# 
   655  041D                     	;# 
   656  041E                     	;# 
   657  0FE4                     	;# 
   658  0FE5                     	;# 
   659  0FE6                     	;# 
   660  0FE7                     	;# 
   661  0FE8                     	;# 
   662  0FE9                     	;# 
   663  0FEA                     	;# 
   664  0FEB                     	;# 
   665  0FED                     	;# 
   666  0FEE                     	;# 
   667  0FEF                     	;# 
   668  0000                     	;# 
   669  0001                     	;# 
   670  0002                     	;# 
   671  0003                     	;# 
   672  0004                     	;# 
   673  0005                     	;# 
   674  0006                     	;# 
   675  0007                     	;# 
   676  0008                     	;# 
   677  0009                     	;# 
   678  000A                     	;# 
   679  000B                     	;# 
   680  000C                     	;# 
   681  000D                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0014                     	;# 
   686  0015                     	;# 
   687  0016                     	;# 
   688  0016                     	;# 
   689  0017                     	;# 
   690  0018                     	;# 
   691  0019                     	;# 
   692  001A                     	;# 
   693  001B                     	;# 
   694  001C                     	;# 
   695  001E                     	;# 
   696  001F                     	;# 
   697  008C                     	;# 
   698  008D                     	;# 
   699  0091                     	;# 
   700  0092                     	;# 
   701  0093                     	;# 
   702  0094                     	;# 
   703  0095                     	;# 
   704  0096                     	;# 
   705  0097                     	;# 
   706  0098                     	;# 
   707  0099                     	;# 
   708  009A                     	;# 
   709  009B                     	;# 
   710  009B                     	;# 
   711  009C                     	;# 
   712  009D                     	;# 
   713  009E                     	;# 
   714  010C                     	;# 
   715  010D                     	;# 
   716  0111                     	;# 
   717  0112                     	;# 
   718  0113                     	;# 
   719  0114                     	;# 
   720  0115                     	;# 
   721  0116                     	;# 
   722  0117                     	;# 
   723  0118                     	;# 
   724  0119                     	;# 
   725  011A                     	;# 
   726  011B                     	;# 
   727  011D                     	;# 
   728  011E                     	;# 
   729  018C                     	;# 
   730  018D                     	;# 
   731  0191                     	;# 
   732  0191                     	;# 
   733  0192                     	;# 
   734  0193                     	;# 
   735  0193                     	;# 
   736  0193                     	;# 
   737  0194                     	;# 
   738  0195                     	;# 
   739  0196                     	;# 
   740  0199                     	;# 
   741  019A                     	;# 
   742  019B                     	;# 
   743  019B                     	;# 
   744  019B                     	;# 
   745  019B                     	;# 
   746  019C                     	;# 
   747  019C                     	;# 
   748  019D                     	;# 
   749  019E                     	;# 
   750  019F                     	;# 
   751  020C                     	;# 
   752  020D                     	;# 
   753  0211                     	;# 
   754  0211                     	;# 
   755  0212                     	;# 
   756  0212                     	;# 
   757  0213                     	;# 
   758  0213                     	;# 
   759  0214                     	;# 
   760  0214                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0216                     	;# 
   765  0216                     	;# 
   766  0217                     	;# 
   767  0217                     	;# 
   768  0219                     	;# 
   769  021A                     	;# 
   770  021B                     	;# 
   771  021C                     	;# 
   772  021D                     	;# 
   773  021E                     	;# 
   774  021F                     	;# 
   775  0291                     	;# 
   776  0291                     	;# 
   777  0292                     	;# 
   778  0293                     	;# 
   779  0294                     	;# 
   780  0295                     	;# 
   781  0295                     	;# 
   782  0296                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  029B                     	;# 
   788  029C                     	;# 
   789  029C                     	;# 
   790  029D                     	;# 
   791  029E                     	;# 
   792  029E                     	;# 
   793  0311                     	;# 
   794  0311                     	;# 
   795  0312                     	;# 
   796  0313                     	;# 
   797  0318                     	;# 
   798  0318                     	;# 
   799  0319                     	;# 
   800  031A                     	;# 
   801  0394                     	;# 
   802  0395                     	;# 
   803  0396                     	;# 
   804  039A                     	;# 
   805  039C                     	;# 
   806  039D                     	;# 
   807  039E                     	;# 
   808  039F                     	;# 
   809  0415                     	;# 
   810  0416                     	;# 
   811  0417                     	;# 
   812  041C                     	;# 
   813  041D                     	;# 
   814  041E                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  0011                     	;# 
   841  0012                     	;# 
   842  0013                     	;# 
   843  0014                     	;# 
   844  0015                     	;# 
   845  0016                     	;# 
   846  0016                     	;# 
   847  0017                     	;# 
   848  0018                     	;# 
   849  0019                     	;# 
   850  001A                     	;# 
   851  001B                     	;# 
   852  001C                     	;# 
   853  001E                     	;# 
   854  001F                     	;# 
   855  008C                     	;# 
   856  008D                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0093                     	;# 
   860  0094                     	;# 
   861  0095                     	;# 
   862  0096                     	;# 
   863  0097                     	;# 
   864  0098                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  010C                     	;# 
   873  010D                     	;# 
   874  0111                     	;# 
   875  0112                     	;# 
   876  0113                     	;# 
   877  0114                     	;# 
   878  0115                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  0118                     	;# 
   882  0119                     	;# 
   883  011A                     	;# 
   884  011B                     	;# 
   885  011D                     	;# 
   886  011E                     	;# 
   887  018C                     	;# 
   888  018D                     	;# 
   889  0191                     	;# 
   890  0191                     	;# 
   891  0192                     	;# 
   892  0193                     	;# 
   893  0193                     	;# 
   894  0193                     	;# 
   895  0194                     	;# 
   896  0195                     	;# 
   897  0196                     	;# 
   898  0199                     	;# 
   899  019A                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019B                     	;# 
   903  019B                     	;# 
   904  019C                     	;# 
   905  019C                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019F                     	;# 
   909  020C                     	;# 
   910  020D                     	;# 
   911  0211                     	;# 
   912  0211                     	;# 
   913  0212                     	;# 
   914  0212                     	;# 
   915  0213                     	;# 
   916  0213                     	;# 
   917  0214                     	;# 
   918  0214                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0216                     	;# 
   923  0216                     	;# 
   924  0217                     	;# 
   925  0217                     	;# 
   926  0219                     	;# 
   927  021A                     	;# 
   928  021B                     	;# 
   929  021C                     	;# 
   930  021D                     	;# 
   931  021E                     	;# 
   932  021F                     	;# 
   933  0291                     	;# 
   934  0291                     	;# 
   935  0292                     	;# 
   936  0293                     	;# 
   937  0294                     	;# 
   938  0295                     	;# 
   939  0295                     	;# 
   940  0296                     	;# 
   941  0298                     	;# 
   942  0298                     	;# 
   943  0299                     	;# 
   944  029A                     	;# 
   945  029B                     	;# 
   946  029C                     	;# 
   947  029C                     	;# 
   948  029D                     	;# 
   949  029E                     	;# 
   950  029E                     	;# 
   951  0311                     	;# 
   952  0311                     	;# 
   953  0312                     	;# 
   954  0313                     	;# 
   955  0318                     	;# 
   956  0318                     	;# 
   957  0319                     	;# 
   958  031A                     	;# 
   959  0394                     	;# 
   960  0395                     	;# 
   961  0396                     	;# 
   962  039A                     	;# 
   963  039C                     	;# 
   964  039D                     	;# 
   965  039E                     	;# 
   966  039F                     	;# 
   967  0415                     	;# 
   968  0416                     	;# 
   969  0417                     	;# 
   970  041C                     	;# 
   971  041D                     	;# 
   972  041E                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  0011                     	;# 
   999  0012                     	;# 
  1000  0013                     	;# 
  1001  0014                     	;# 
  1002  0015                     	;# 
  1003  0016                     	;# 
  1004  0016                     	;# 
  1005  0017                     	;# 
  1006  0018                     	;# 
  1007  0019                     	;# 
  1008  001A                     	;# 
  1009  001B                     	;# 
  1010  001C                     	;# 
  1011  001E                     	;# 
  1012  001F                     	;# 
  1013  008C                     	;# 
  1014  008D                     	;# 
  1015  0091                     	;# 
  1016  0092                     	;# 
  1017  0093                     	;# 
  1018  0094                     	;# 
  1019  0095                     	;# 
  1020  0096                     	;# 
  1021  0097                     	;# 
  1022  0098                     	;# 
  1023  0099                     	;# 
  1024  009A                     	;# 
  1025  009B                     	;# 
  1026  009B                     	;# 
  1027  009C                     	;# 
  1028  009D                     	;# 
  1029  009E                     	;# 
  1030  010C                     	;# 
  1031  010D                     	;# 
  1032  0111                     	;# 
  1033  0112                     	;# 
  1034  0113                     	;# 
  1035  0114                     	;# 
  1036  0115                     	;# 
  1037  0116                     	;# 
  1038  0117                     	;# 
  1039  0118                     	;# 
  1040  0119                     	;# 
  1041  011A                     	;# 
  1042  011B                     	;# 
  1043  011D                     	;# 
  1044  011E                     	;# 
  1045  018C                     	;# 
  1046  018D                     	;# 
  1047  0191                     	;# 
  1048  0191                     	;# 
  1049  0192                     	;# 
  1050  0193                     	;# 
  1051  0193                     	;# 
  1052  0193                     	;# 
  1053  0194                     	;# 
  1054  0195                     	;# 
  1055  0196                     	;# 
  1056  0199                     	;# 
  1057  019A                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019B                     	;# 
  1062  019C                     	;# 
  1063  019C                     	;# 
  1064  019D                     	;# 
  1065  019E                     	;# 
  1066  019F                     	;# 
  1067  020C                     	;# 
  1068  020D                     	;# 
  1069  0211                     	;# 
  1070  0211                     	;# 
  1071  0212                     	;# 
  1072  0212                     	;# 
  1073  0213                     	;# 
  1074  0213                     	;# 
  1075  0214                     	;# 
  1076  0214                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0216                     	;# 
  1081  0216                     	;# 
  1082  0217                     	;# 
  1083  0217                     	;# 
  1084  0219                     	;# 
  1085  021A                     	;# 
  1086  021B                     	;# 
  1087  021C                     	;# 
  1088  021D                     	;# 
  1089  021E                     	;# 
  1090  021F                     	;# 
  1091  0291                     	;# 
  1092  0291                     	;# 
  1093  0292                     	;# 
  1094  0293                     	;# 
  1095  0294                     	;# 
  1096  0295                     	;# 
  1097  0295                     	;# 
  1098  0296                     	;# 
  1099  0298                     	;# 
  1100  0298                     	;# 
  1101  0299                     	;# 
  1102  029A                     	;# 
  1103  029B                     	;# 
  1104  029C                     	;# 
  1105  029C                     	;# 
  1106  029D                     	;# 
  1107  029E                     	;# 
  1108  029E                     	;# 
  1109  0311                     	;# 
  1110  0311                     	;# 
  1111  0312                     	;# 
  1112  0313                     	;# 
  1113  0318                     	;# 
  1114  0318                     	;# 
  1115  0319                     	;# 
  1116  031A                     	;# 
  1117  0394                     	;# 
  1118  0395                     	;# 
  1119  0396                     	;# 
  1120  039A                     	;# 
  1121  039C                     	;# 
  1122  039D                     	;# 
  1123  039E                     	;# 
  1124  039F                     	;# 
  1125  0415                     	;# 
  1126  0416                     	;# 
  1127  0417                     	;# 
  1128  041C                     	;# 
  1129  041D                     	;# 
  1130  041E                     	;# 
  1131  0FE4                     	;# 
  1132  0FE5                     	;# 
  1133  0FE6                     	;# 
  1134  0FE7                     	;# 
  1135  0FE8                     	;# 
  1136  0FE9                     	;# 
  1137  0FEA                     	;# 
  1138  0FEB                     	;# 
  1139  0FED                     	;# 
  1140  0FEE                     	;# 
  1141  0FEF                     	;# 
  1142                           
  1143                           	psect	idataBANK0
  1144  040E                     __pidataBANK0:	
  1145                           
  1146                           ;initializer for _mux
  1147  040E  3401               	retlw	1
  1148  040F  3400               	retlw	0
  1149                           
  1150                           	psect	nvCOMMON
  1151  007A                     __pnvCOMMON:	
  1152  007A                     _timer0ReloadVal:	
  1153  007A                     	ds	1
  1154                           
  1155                           	psect	nvBANK0
  1156  0037                     __pnvBANK0:	
  1157  0037                     _TMR2_InterruptHandler:	
  1158  0037                     	ds	2
  1159  000B                     _INTCONbits	set	11
  1160  0011                     _PIR1bits	set	17
  1161  000C                     _PORTAbits	set	12
  1162  001B                     _PR2	set	27
  1163  001C                     _T2CON	set	28
  1164  001C                     _T2CONbits	set	28
  1165  0015                     _TMR0	set	21
  1166  001A                     _TMR2	set	26
  1167  0095                     _OPTION_REG	set	149
  1168  0095                     _OPTION_REGbits	set	149
  1169  0099                     _OSCCON	set	153
  1170  009A                     _OSCSTAT	set	154
  1171  0098                     _OSCTUNE	set	152
  1172  0091                     _PIE1bits	set	145
  1173  008C                     _TRISA	set	140
  1174  008D                     _TRISB	set	141
  1175  011D                     _APFCON0	set	285
  1176  011E                     _APFCON1	set	286
  1177  010C                     _LATA	set	268
  1178  010D                     _LATB	set	269
  1179  0860                     _LATA0	set	2144
  1180  0861                     _LATA1	set	2145
  1181  0862                     _LATA2	set	2146
  1182  0863                     _LATA3	set	2147
  1183  086F                     _LATB7	set	2159
  1184  018C                     _ANSELA	set	396
  1185  018D                     _ANSELB	set	397
  1186  020C                     _WPUA	set	524
  1187  020D                     _WPUB	set	525
  1188                           
  1189                           ; #config settings
  1190  0000                     
  1191                           	psect	cinit
  1192  001F                     start_initialization:	
  1193  001F                     __initialization:	
  1194                           
  1195                           ; Clear objects allocated to COMMON
  1196  001F  01F6               	clrf	__pbssCOMMON& (0+127)
  1197  0020  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1198  0021  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1199  0022  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1200                           
  1201                           ; Clear objects allocated to BANK0
  1202  0023  3020               	movlw	low __pbssBANK0
  1203  0024  0084               	movwf	4
  1204  0025  3000               	movlw	high __pbssBANK0
  1205  0026  0085               	movwf	5
  1206  0027  3014               	movlw	20
  1207  0028  3183  23F9  3180   	fcall	clear_ram0
  1208                           
  1209                           ; Initialize objects allocated to BANK0
  1210  002B  3184  240E  3180   	fcall	__pidataBANK0	;fetch initializer
  1211  002E  00B9               	movwf	__pdataBANK0& (0+127)
  1212  002F  3184  240F         	fcall	__pidataBANK0+1	;fetch initializer
  1213  0031  00BA               	movwf	(__pdataBANK0+1)& (0+127)
  1214  0032                     end_of_initialization:	
  1215                           ;End of C runtime variable initialization code
  1216                           
  1217  0032                     __end_of__initialization:	
  1218  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1219  0033  0020               	movlb	0
  1220  0034  3181  29D2         	ljmp	_main	;jump to C main() function
  1221                           
  1222                           	psect	bssCOMMON
  1223  0076                     __pbssCOMMON:	
  1224  0076                     _HE:	
  1225  0076                     	ds	2
  1226  0078                     _HZ:	
  1227  0078                     	ds	2
  1228                           
  1229                           	psect	bssBANK0
  1230  0020                     __pbssBANK0:	
  1231  0020                     TMR2_ISR@CountCallBack:	
  1232  0020                     	ds	2
  1233  0022                     _DP:	
  1234  0022                     	ds	2
  1235  0024                     _ME:	
  1236  0024                     	ds	2
  1237  0026                     _MZ:	
  1238  0026                     	ds	2
  1239  0028                     _SE:	
  1240  0028                     	ds	2
  1241  002A                     _SZ:	
  1242  002A                     	ds	2
  1243  002C                     _digit:	
  1244  002C                     	ds	2
  1245  002E                     _tasterpos:	
  1246  002E                     	ds	2
  1247  0030                     _tasterzahl:	
  1248  0030                     	ds	2
  1249  0032                     _zahl:	
  1250  0032                     	ds	2
  1251                           
  1252                           	psect	dataBANK0
  1253  0039                     __pdataBANK0:	
  1254  0039                     _mux:	
  1255  0039                     	ds	2
  1256                           
  1257                           	psect	clrtext
  1258  03F9                     clear_ram0:	
  1259                           ;	Called with FSR0 containing the base address, and
  1260                           ;	WREG with the size to clear
  1261                           
  1262  03F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1263  03FA                     clrloop0:	
  1264  03FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1265  03FB  3101               	addfsr 0,1
  1266  03FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1267  03FD  2BFA               	goto	clrloop0	;have we reached the end yet?
  1268  03FE  3400               	retlw	0	;all done for this memory range, return
  1269                           
  1270                           	psect	cstackCOMMON
  1271  0070                     __pcstackCOMMON:	
  1272  0070                     ?_TMR2_DefaultInterruptHandler:	
  1273  0070                     ??_TMR2_DefaultInterruptHandler:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_TMR2_StartTimer:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_TMR2_CallBack:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ??_TMR2_CallBack:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_TMR0_ISR:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_uhrzeitanzeigen:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_SYSTEM_Initialize:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_uhrzweivier:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_uhrstellen:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_anzeigewechseln:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_OSCILLATOR_Initialize:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_TMR2_Initialize:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_TMR2_ISR:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ??_TMR2_ISR:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_INTERRUPT_InterruptManager:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_TMR0_Initialize:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_main:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ?_siebensegdek:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_digitstellen:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_PIN_MANAGER_Initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     siebensegdek@zahl:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336                           
  1337                           ; 2 bytes @ 0x0
  1338  0070                     	ds	2
  1339  0072                     ??_TMR0_ISR:	
  1340  0072                     ??_uhrzeitanzeigen:	
  1341                           ; 1 bytes @ 0x2
  1342                           
  1343  0072                     ??_INTERRUPT_InterruptManager:	
  1344                           ; 1 bytes @ 0x2
  1345                           
  1346  0072                     ??_siebensegdek:	
  1347                           ; 1 bytes @ 0x2
  1348                           
  1349                           
  1350                           ; 1 bytes @ 0x2
  1351  0072                     	ds	1
  1352  0073                     ?_TMR2_SetInterruptHandler:	
  1353  0073                     ??_TMR2_StartTimer:	
  1354                           ; 1 bytes @ 0x3
  1355                           
  1356  0073                     ??_uhrzweivier:	
  1357                           ; 1 bytes @ 0x3
  1358                           
  1359  0073                     ??_anzeigewechseln:	
  1360                           ; 1 bytes @ 0x3
  1361                           
  1362  0073                     ??_OSCILLATOR_Initialize:	
  1363                           ; 1 bytes @ 0x3
  1364                           
  1365  0073                     ??_TMR0_Initialize:	
  1366                           ; 1 bytes @ 0x3
  1367                           
  1368  0073                     ??_digitstellen:	
  1369                           ; 1 bytes @ 0x3
  1370                           
  1371  0073                     ??_PIN_MANAGER_Initialize:	
  1372                           ; 1 bytes @ 0x3
  1373                           
  1374  0073                     TMR2_SetInterruptHandler@InterruptHandler:	
  1375                           ; 1 bytes @ 0x3
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x3
  1379  0073                     	ds	2
  1380  0075                     ??_TMR2_SetInterruptHandler:	
  1381  0075                     ??_SYSTEM_Initialize:	
  1382                           ; 1 bytes @ 0x5
  1383                           
  1384  0075                     ??_TMR2_Initialize:	
  1385                           ; 1 bytes @ 0x5
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0x5
  1389  0075                     	ds	1
  1390  0076                     ??_uhrstellen:	
  1391                           
  1392                           	psect	cstackBANK0
  1393  0034                     __pcstackBANK0:	
  1394                           ; 1 bytes @ 0x6
  1395                           
  1396  0034                     ??_main:	
  1397                           
  1398                           ; 1 bytes @ 0x0
  1399  0034                     	ds	3
  1400                           
  1401                           	psect	maintext
  1402  01D2                     __pmaintext:	
  1403 ;;
  1404 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1405 ;;
  1406 ;; *************** function _main *****************
  1407 ;; Defined at:
  1408 ;;		line 57 in file "main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : B1F/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1422 ;;      Params:         0       0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0
  1424 ;;      Temps:          0       3       0       0       0       0
  1425 ;;      Totals:         0       3       0       0       0       0
  1426 ;;Total ram usage:        3 bytes
  1427 ;; Hardware stack levels required when called:    7
  1428 ;; This function calls:
  1429 ;;		_SYSTEM_Initialize
  1430 ;;		_anzeigewechseln
  1431 ;;		_uhrstellen
  1432 ;;		_uhrzweivier
  1433 ;; This function is called by:
  1434 ;;		Startup code after reset
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _main
  1440  01D2                     _main:	
  1441                           
  1442                           ;main.c: 60: SYSTEM_Initialize();
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1446  01D2  3183  23E6  3181   	fcall	_SYSTEM_Initialize
  1447                           
  1448                           ;main.c: 66: (INTCONbits.GIE = 1);
  1449  01D5  178B               	bsf	11,7	;volatile
  1450                           
  1451                           ;main.c: 69: (INTCONbits.PEIE = 1);
  1452  01D6  170B               	bsf	11,6	;volatile
  1453  01D7                     l1901:	
  1454                           ;main.c: 78: while (1)
  1455                           
  1456                           
  1457                           ;main.c: 79: {
  1458                           ;main.c: 80: if((mux==3)&&(SE%2==0))
  1459  01D7  3003               	movlw	3
  1460  01D8  0020               	movlb	0	; select bank0
  1461  01D9  0639               	xorwf	_mux,w
  1462  01DA  043A               	iorwf	_mux+1,w
  1463  01DB  1903               	btfsc	3,2
  1464  01DC  1828               	btfsc	_SE,0
  1465  01DD  29E3               	goto	l1907
  1466                           
  1467                           ;main.c: 81: {
  1468                           ;main.c: 82: DP=1;
  1469  01DE  3001               	movlw	1
  1470  01DF  00A2               	movwf	_DP
  1471  01E0  3000               	movlw	0
  1472  01E1  00A3               	movwf	_DP+1
  1473                           
  1474                           ;main.c: 83: }
  1475  01E2  29E5               	goto	l1909
  1476  01E3                     l1907:	
  1477                           
  1478                           ;main.c: 84: else
  1479                           ;main.c: 85: {
  1480                           ;main.c: 86: DP=0;
  1481  01E3  01A2               	clrf	_DP
  1482  01E4  01A3               	clrf	_DP+1
  1483  01E5                     l1909:	
  1484                           
  1485                           ;main.c: 87: }
  1486                           ;main.c: 91: uhrzweivier();
  1487  01E5  3182  22C9  3181   	fcall	_uhrzweivier
  1488                           
  1489                           ;main.c: 93: tasterpos= PORTAbits.RA4;
  1490  01E8  0020               	movlb	0	; select bank0
  1491  01E9  0E0C               	swapf	12,w	;volatile
  1492  01EA  3901               	andlw	1
  1493  01EB  00B4               	movwf	??_main
  1494  01EC  01B5               	clrf	??_main+1
  1495  01ED  0834               	movf	??_main,w
  1496  01EE  00AE               	movwf	_tasterpos
  1497  01EF  0835               	movf	??_main+1,w
  1498  01F0  00AF               	movwf	_tasterpos+1
  1499                           
  1500                           ;main.c: 94: tasterzahl= PORTAbits.RA5;
  1501  01F1  0E0C               	swapf	12,w	;volatile
  1502  01F2  0C89               	rrf	9,f
  1503  01F3  3901               	andlw	1
  1504  01F4  00B4               	movwf	??_main
  1505  01F5  01B5               	clrf	??_main+1
  1506  01F6  0834               	movf	??_main,w
  1507  01F7  00B0               	movwf	_tasterzahl
  1508  01F8  0835               	movf	??_main+1,w
  1509  01F9  00B1               	movwf	_tasterzahl+1
  1510                           
  1511                           ;main.c: 97: if (tasterpos==0)
  1512  01FA  082E               	movf	_tasterpos,w
  1513  01FB  042F               	iorwf	_tasterpos+1,w
  1514  01FC  1D03               	btfss	3,2
  1515  01FD  2A2C               	goto	l1925
  1516                           
  1517                           ;main.c: 98: {
  1518                           ;main.c: 99: _delay((unsigned long)((100)*(8000000/4000.0)));
  1519  01FE  3002               	movlw	2
  1520  01FF  00B6               	movwf	??_main+2
  1521  0200  3004               	movlw	4
  1522  0201  00B5               	movwf	??_main+1
  1523  0202  30BA               	movlw	186
  1524  0203  00B4               	movwf	??_main
  1525  0204                     u917:	
  1526  0204  0BB4               	decfsz	??_main,f
  1527  0205  2A04               	goto	u917
  1528  0206  0BB5               	decfsz	??_main+1,f
  1529  0207  2A04               	goto	u917
  1530  0208  0BB6               	decfsz	??_main+2,f
  1531  0209  2A04               	goto	u917
  1532  020A  0000               	nop
  1533  020B                     l1919:	
  1534                           ;main.c: 100: do
  1535                           
  1536                           
  1537                           ;main.c: 101: {
  1538                           ;main.c: 102: tasterpos=PORTAbits.RA4;
  1539  020B  0020               	movlb	0	; select bank0
  1540  020C  0E0C               	swapf	12,w	;volatile
  1541  020D  3901               	andlw	1
  1542  020E  00B4               	movwf	??_main
  1543  020F  01B5               	clrf	??_main+1
  1544  0210  0834               	movf	??_main,w
  1545  0211  00AE               	movwf	_tasterpos
  1546  0212  0835               	movf	??_main+1,w
  1547  0213  00AF               	movwf	_tasterpos+1
  1548                           
  1549                           ;main.c: 103: _delay((unsigned long)((100)*(8000000/4000.0)));
  1550  0214  3002               	movlw	2
  1551  0215  00B6               	movwf	??_main+2
  1552  0216  3004               	movlw	4
  1553  0217  00B5               	movwf	??_main+1
  1554  0218  30BA               	movlw	186
  1555  0219  00B4               	movwf	??_main
  1556  021A                     u927:	
  1557  021A  0BB4               	decfsz	??_main,f
  1558  021B  2A1A               	goto	u927
  1559  021C  0BB5               	decfsz	??_main+1,f
  1560  021D  2A1A               	goto	u927
  1561  021E  0BB6               	decfsz	??_main+2,f
  1562  021F  2A1A               	goto	u927
  1563  0220  0000               	nop
  1564                           
  1565                           ;main.c: 105: }
  1566                           ;main.c: 106: while(tasterpos ==0);
  1567  0221  0020               	movlb	0	; select bank0
  1568  0222  082E               	movf	_tasterpos,w
  1569  0223  042F               	iorwf	_tasterpos+1,w
  1570  0224  1903               	btfsc	3,2
  1571  0225  2A0B               	goto	l1919
  1572                           
  1573                           ;main.c: 107: uhrstellen ();
  1574  0226  3183  2329  3181   	fcall	_uhrstellen
  1575  0229                     l197:	
  1576                           ;main.c: 109: {}
  1577                           
  1578                           ;main.c: 108: while (PORTAbits.RA4==0)
  1579                           
  1580  0229  0020               	movlb	0	; select bank0
  1581  022A  1E0C               	btfss	12,4	;volatile
  1582  022B  2A29               	goto	l197
  1583  022C                     l1925:	
  1584                           
  1585                           ;main.c: 110: }
  1586                           ;main.c: 111: if (tasterzahl==0)
  1587  022C  0830               	movf	_tasterzahl,w
  1588  022D  0431               	iorwf	_tasterzahl+1,w
  1589  022E  1D03               	btfss	3,2
  1590  022F  29D7               	goto	l1901
  1591                           
  1592                           ;main.c: 112: {
  1593                           ;main.c: 113: _delay((unsigned long)((100)*(8000000/4000.0)));
  1594  0230  3002               	movlw	2
  1595  0231  00B6               	movwf	??_main+2
  1596  0232  3004               	movlw	4
  1597  0233  00B5               	movwf	??_main+1
  1598  0234  30BA               	movlw	186
  1599  0235  00B4               	movwf	??_main
  1600  0236                     u937:	
  1601  0236  0BB4               	decfsz	??_main,f
  1602  0237  2A36               	goto	u937
  1603  0238  0BB5               	decfsz	??_main+1,f
  1604  0239  2A36               	goto	u937
  1605  023A  0BB6               	decfsz	??_main+2,f
  1606  023B  2A36               	goto	u937
  1607  023C  0000               	nop
  1608  023D                     l1929:	
  1609                           ;main.c: 114: do
  1610                           
  1611                           
  1612                           ;main.c: 115: {
  1613                           ;main.c: 116: tasterpos=PORTAbits.RA5;
  1614  023D  0020               	movlb	0	; select bank0
  1615  023E  0E0C               	swapf	12,w	;volatile
  1616  023F  0C89               	rrf	9,f
  1617  0240  3901               	andlw	1
  1618  0241  00B4               	movwf	??_main
  1619  0242  01B5               	clrf	??_main+1
  1620  0243  0834               	movf	??_main,w
  1621  0244  00AE               	movwf	_tasterpos
  1622  0245  0835               	movf	??_main+1,w
  1623  0246  00AF               	movwf	_tasterpos+1
  1624                           
  1625                           ;main.c: 117: _delay((unsigned long)((100)*(8000000/4000.0)));
  1626  0247  3002               	movlw	2
  1627  0248  00B6               	movwf	??_main+2
  1628  0249  3004               	movlw	4
  1629  024A  00B5               	movwf	??_main+1
  1630  024B  30BA               	movlw	186
  1631  024C  00B4               	movwf	??_main
  1632  024D                     u947:	
  1633  024D  0BB4               	decfsz	??_main,f
  1634  024E  2A4D               	goto	u947
  1635  024F  0BB5               	decfsz	??_main+1,f
  1636  0250  2A4D               	goto	u947
  1637  0251  0BB6               	decfsz	??_main+2,f
  1638  0252  2A4D               	goto	u947
  1639  0253  0000               	nop
  1640                           
  1641                           ;main.c: 119: }
  1642                           ;main.c: 120: while(tasterpos ==0);
  1643  0254  0020               	movlb	0	; select bank0
  1644  0255  082E               	movf	_tasterpos,w
  1645  0256  042F               	iorwf	_tasterpos+1,w
  1646  0257  1903               	btfsc	3,2
  1647  0258  2A3D               	goto	l1929
  1648                           
  1649                           ;main.c: 122: anzeigewechseln ();
  1650  0259  3183  23B6  3181   	fcall	_anzeigewechseln
  1651  025C                     l203:	
  1652                           ;main.c: 124: {}
  1653                           
  1654                           ;main.c: 123: while (PORTAbits.RA5==0)
  1655                           
  1656  025C  0020               	movlb	0	; select bank0
  1657  025D  1A8C               	btfsc	12,5	;volatile
  1658  025E  29D7               	goto	l1901
  1659  025F  2A5C               	goto	l203
  1660  0260                     __end_of_main:	
  1661                           
  1662                           	psect	text1
  1663  02C9                     __ptext1:	
  1664 ;; *************** function _uhrzweivier *****************
  1665 ;; Defined at:
  1666 ;;		line 234 in file "PIC_functions.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1680 ;;      Params:         0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    4
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _uhrzweivier
  1696  02C9                     _uhrzweivier:	
  1697                           
  1698                           ;PIC_functions.c: 236: if (SE>9)
  1699                           
  1700                           ;incstack = 0
  1701                           ; Regs used in _uhrzweivier: [wreg+status,2+status,0]
  1702  02C9  3000               	movlw	0
  1703  02CA  0020               	movlb	0	; select bank0
  1704  02CB  0229               	subwf	_SE+1,w
  1705  02CC  300A               	movlw	10
  1706  02CD  1903               	skipnz
  1707  02CE  0228               	subwf	_SE,w
  1708  02CF  1C03               	skipc
  1709  02D0  0008               	return
  1710                           
  1711                           ;PIC_functions.c: 237: {
  1712                           ;PIC_functions.c: 238: SE=0;
  1713  02D1  01A8               	clrf	_SE
  1714  02D2  01A9               	clrf	_SE+1
  1715                           
  1716                           ;PIC_functions.c: 239: SZ=SZ+1;
  1717  02D3  082A               	movf	_SZ,w
  1718  02D4  3E01               	addlw	1
  1719  02D5  00AA               	movwf	_SZ
  1720  02D6  3000               	movlw	0
  1721  02D7  3D2B               	addwfc	_SZ+1,w
  1722  02D8  00AB               	movwf	_SZ+1
  1723                           
  1724                           ;PIC_functions.c: 240: if (SZ>5)
  1725  02D9  3000               	movlw	0
  1726  02DA  022B               	subwf	_SZ+1,w
  1727  02DB  3006               	movlw	6
  1728  02DC  1903               	skipnz
  1729  02DD  022A               	subwf	_SZ,w
  1730  02DE  1C03               	skipc
  1731  02DF  0008               	return
  1732                           
  1733                           ;PIC_functions.c: 241: {
  1734                           ;PIC_functions.c: 242: SZ=0;
  1735  02E0  01AA               	clrf	_SZ
  1736  02E1  01AB               	clrf	_SZ+1
  1737                           
  1738                           ;PIC_functions.c: 243: ME=ME+1;
  1739  02E2  0824               	movf	_ME,w
  1740  02E3  3E01               	addlw	1
  1741  02E4  00A4               	movwf	_ME
  1742  02E5  3000               	movlw	0
  1743  02E6  3D25               	addwfc	_ME+1,w
  1744  02E7  00A5               	movwf	_ME+1
  1745                           
  1746                           ;PIC_functions.c: 244: if (ME>9)
  1747  02E8  3000               	movlw	0
  1748  02E9  0225               	subwf	_ME+1,w
  1749  02EA  300A               	movlw	10
  1750  02EB  1903               	skipnz
  1751  02EC  0224               	subwf	_ME,w
  1752  02ED  1C03               	skipc
  1753  02EE  0008               	return
  1754                           
  1755                           ;PIC_functions.c: 245: {
  1756                           ;PIC_functions.c: 246: ME=0;
  1757  02EF  01A4               	clrf	_ME
  1758  02F0  01A5               	clrf	_ME+1
  1759                           
  1760                           ;PIC_functions.c: 247: MZ=MZ+1;
  1761  02F1  0826               	movf	_MZ,w
  1762  02F2  3E01               	addlw	1
  1763  02F3  00A6               	movwf	_MZ
  1764  02F4  3000               	movlw	0
  1765  02F5  3D27               	addwfc	_MZ+1,w
  1766  02F6  00A7               	movwf	_MZ+1
  1767                           
  1768                           ;PIC_functions.c: 248: if (MZ>5)
  1769  02F7  3000               	movlw	0
  1770  02F8  0227               	subwf	_MZ+1,w
  1771  02F9  3006               	movlw	6
  1772  02FA  1903               	skipnz
  1773  02FB  0226               	subwf	_MZ,w
  1774  02FC  1C03               	skipc
  1775  02FD  0008               	return
  1776                           
  1777                           ;PIC_functions.c: 249: {
  1778                           ;PIC_functions.c: 250: MZ=0;
  1779  02FE  01A6               	clrf	_MZ
  1780  02FF  01A7               	clrf	_MZ+1
  1781                           
  1782                           ;PIC_functions.c: 251: HE=HE+1;
  1783  0300  0876               	movf	_HE,w
  1784  0301  3E01               	addlw	1
  1785  0302  00F6               	movwf	_HE
  1786  0303  3000               	movlw	0
  1787  0304  3D77               	addwfc	_HE+1,w
  1788  0305  00F7               	movwf	_HE+1
  1789                           
  1790                           ;PIC_functions.c: 252: if ((HZ<2)&&(HE>9))
  1791  0306  3000               	movlw	0
  1792  0307  0279               	subwf	_HZ+1,w
  1793  0308  3002               	movlw	2
  1794  0309  1903               	skipnz
  1795  030A  0278               	subwf	_HZ,w
  1796  030B  1803               	skipnc
  1797  030C  2B1D               	goto	l1687
  1798  030D  3000               	movlw	0
  1799  030E  0277               	subwf	_HE+1,w
  1800  030F  300A               	movlw	10
  1801  0310  1903               	skipnz
  1802  0311  0276               	subwf	_HE,w
  1803  0312  1C03               	skipc
  1804  0313  2B1D               	goto	l1687
  1805                           
  1806                           ;PIC_functions.c: 253: {
  1807                           ;PIC_functions.c: 254: HE=0;
  1808  0314  01F6               	clrf	_HE
  1809  0315  01F7               	clrf	_HE+1
  1810                           
  1811                           ;PIC_functions.c: 255: HZ=HZ+1;
  1812  0316  0878               	movf	_HZ,w
  1813  0317  3E01               	addlw	1
  1814  0318  00F8               	movwf	_HZ
  1815  0319  3000               	movlw	0
  1816  031A  3D79               	addwfc	_HZ+1,w
  1817  031B  00F9               	movwf	_HZ+1
  1818                           
  1819                           ;PIC_functions.c: 256: }
  1820  031C  0008               	return
  1821  031D                     l1687:	
  1822                           
  1823                           ;PIC_functions.c: 257: else if (HE>3)
  1824  031D  3000               	movlw	0
  1825  031E  0277               	subwf	_HE+1,w
  1826  031F  3004               	movlw	4
  1827  0320  1903               	skipnz
  1828  0321  0276               	subwf	_HE,w
  1829  0322  1C03               	skipc
  1830  0323  0008               	return
  1831                           
  1832                           ;PIC_functions.c: 258: {
  1833                           ;PIC_functions.c: 259: HE=0;
  1834  0324  01F6               	clrf	_HE
  1835  0325  01F7               	clrf	_HE+1
  1836                           
  1837                           ;PIC_functions.c: 260: HZ=0;
  1838  0326  01F8               	clrf	_HZ
  1839  0327  01F9               	clrf	_HZ+1
  1840  0328  0008               	return
  1841  0329                     __end_of_uhrzweivier:	
  1842                           
  1843                           	psect	text2
  1844  0329                     __ptext2:	
  1845 ;; *************** function _uhrstellen *****************
  1846 ;; Defined at:
  1847 ;;		line 144 in file "PIC_functions.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1861 ;;      Params:         0       0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    5
  1868 ;; This function calls:
  1869 ;;		_digitstellen
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _uhrstellen
  1877  0329                     _uhrstellen:	
  1878                           
  1879                           ;PIC_functions.c: 146: mux=1;
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _uhrstellen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1883  0329  3001               	movlw	1
  1884  032A  0020               	movlb	0	; select bank0
  1885  032B  00B9               	movwf	_mux
  1886  032C  3000               	movlw	0
  1887  032D  00BA               	movwf	_mux+1
  1888                           
  1889                           ;PIC_functions.c: 147: digit = 1;
  1890  032E  3001               	movlw	1
  1891  032F  00AC               	movwf	_digit
  1892  0330  3000               	movlw	0
  1893  0331  00AD               	movwf	_digit+1
  1894                           
  1895                           ;PIC_functions.c: 148: digitstellen ();
  1896  0332  3180  2036  3183   	fcall	_digitstellen
  1897                           
  1898                           ;PIC_functions.c: 149: digit = 2;
  1899  0335  3002               	movlw	2
  1900  0336  0020               	movlb	0	; select bank0
  1901  0337  00AC               	movwf	_digit
  1902  0338  3000               	movlw	0
  1903  0339  00AD               	movwf	_digit+1
  1904                           
  1905                           ;PIC_functions.c: 150: digitstellen ();
  1906  033A  3180  2036  3183   	fcall	_digitstellen
  1907                           
  1908                           ;PIC_functions.c: 151: digit = 3;
  1909  033D  3003               	movlw	3
  1910  033E  0020               	movlb	0	; select bank0
  1911  033F  00AC               	movwf	_digit
  1912  0340  3000               	movlw	0
  1913  0341  00AD               	movwf	_digit+1
  1914                           
  1915                           ;PIC_functions.c: 152: digitstellen ();
  1916  0342  3180  2036  3183   	fcall	_digitstellen
  1917                           
  1918                           ;PIC_functions.c: 153: digit = 4;
  1919  0345  3004               	movlw	4
  1920  0346  0020               	movlb	0	; select bank0
  1921  0347  00AC               	movwf	_digit
  1922  0348  3000               	movlw	0
  1923  0349  00AD               	movwf	_digit+1
  1924                           
  1925                           ;PIC_functions.c: 154: digitstellen ();
  1926  034A  3180  2036         	fcall	_digitstellen
  1927                           
  1928                           ;PIC_functions.c: 155: SE=0;
  1929  034C  0020               	movlb	0	; select bank0
  1930  034D  01A8               	clrf	_SE
  1931  034E  01A9               	clrf	_SE+1
  1932                           
  1933                           ;PIC_functions.c: 156: SZ=0;
  1934  034F  01AA               	clrf	_SZ
  1935  0350  01AB               	clrf	_SZ+1
  1936                           
  1937                           ;PIC_functions.c: 157: digit=0;
  1938  0351  01AC               	clrf	_digit
  1939  0352  01AD               	clrf	_digit+1
  1940  0353  0008               	return
  1941  0354                     __end_of_uhrstellen:	
  1942                           
  1943                           	psect	text3
  1944  0036                     __ptext3:	
  1945 ;; *************** function _digitstellen *****************
  1946 ;; Defined at:
  1947 ;;		line 81 in file "PIC_functions.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1961 ;;      Params:         0       0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0
  1963 ;;      Temps:          3       0       0       0       0       0
  1964 ;;      Totals:         3       0       0       0       0       0
  1965 ;;Total ram usage:        3 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    4
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_uhrstellen
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _digitstellen
  1977  0036                     _digitstellen:	
  1978  0036                     l1601:	
  1979                           ;PIC_functions.c: 85: while (tasterpos==1)
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _digitstellen: [wreg-fsr0h+status,2+status,0]
  1983                           
  1984  0036  0020               	movlb	0	; select bank0
  1985  0037  032E               	decf	_tasterpos,w
  1986  0038  042F               	iorwf	_tasterpos+1,w
  1987  0039  1D03               	btfss	3,2
  1988  003A  28EB               	goto	l1603
  1989                           
  1990                           ;PIC_functions.c: 86: {
  1991                           ;PIC_functions.c: 87: tasterpos = PORTAbits.RA4 ;
  1992  003B  0020               	movlb	0	; select bank0
  1993  003C  0E0C               	swapf	12,w	;volatile
  1994  003D  3901               	andlw	1
  1995  003E  00F3               	movwf	??_digitstellen
  1996  003F  01F4               	clrf	??_digitstellen+1
  1997  0040  0873               	movf	??_digitstellen,w
  1998  0041  00AE               	movwf	_tasterpos
  1999  0042  0874               	movf	??_digitstellen+1,w
  2000  0043  00AF               	movwf	_tasterpos+1
  2001                           
  2002                           ;PIC_functions.c: 89: tasterzahl= PORTAbits.RA5 ;
  2003  0044  0E0C               	swapf	12,w	;volatile
  2004  0045  0C89               	rrf	9,f
  2005  0046  3901               	andlw	1
  2006  0047  00F3               	movwf	??_digitstellen
  2007  0048  01F4               	clrf	??_digitstellen+1
  2008  0049  0873               	movf	??_digitstellen,w
  2009  004A  00B0               	movwf	_tasterzahl
  2010  004B  0874               	movf	??_digitstellen+1,w
  2011  004C  00B1               	movwf	_tasterzahl+1
  2012                           
  2013                           ;PIC_functions.c: 92: if (tasterzahl == 0)
  2014  004D  0830               	movf	_tasterzahl,w
  2015  004E  0431               	iorwf	_tasterzahl+1,w
  2016  004F  1D03               	btfss	3,2
  2017  0050  2836               	goto	l1601
  2018                           
  2019                           ;PIC_functions.c: 93: { _delay((unsigned long)((100)*(8000000/4000.0)));
  2020  0051  3002               	movlw	2
  2021  0052  00F5               	movwf	??_digitstellen+2
  2022  0053  3004               	movlw	4
  2023  0054  00F4               	movwf	??_digitstellen+1
  2024  0055  30BA               	movlw	186
  2025  0056  00F3               	movwf	??_digitstellen
  2026  0057                     u957:	
  2027  0057  0BF3               	decfsz	??_digitstellen,f
  2028  0058  2857               	goto	u957
  2029  0059  0BF4               	decfsz	??_digitstellen+1,f
  2030  005A  2857               	goto	u957
  2031  005B  0BF5               	decfsz	??_digitstellen+2,f
  2032  005C  2857               	goto	u957
  2033  005D  0000               	nop
  2034  005E                     l1559:	
  2035                           ;PIC_functions.c: 94: do
  2036                           
  2037                           
  2038                           ;PIC_functions.c: 95: {
  2039                           ;PIC_functions.c: 96: tasterzahl=PORTAbits.RA5 ;
  2040  005E  0020               	movlb	0	; select bank0
  2041  005F  0E0C               	swapf	12,w	;volatile
  2042  0060  0C89               	rrf	9,f
  2043  0061  3901               	andlw	1
  2044  0062  00F3               	movwf	??_digitstellen
  2045  0063  01F4               	clrf	??_digitstellen+1
  2046  0064  0873               	movf	??_digitstellen,w
  2047  0065  00B0               	movwf	_tasterzahl
  2048  0066  0874               	movf	??_digitstellen+1,w
  2049  0067  00B1               	movwf	_tasterzahl+1
  2050                           
  2051                           ;PIC_functions.c: 97: _delay((unsigned long)((100)*(8000000/4000.0)));
  2052  0068  3002               	movlw	2
  2053  0069  00F5               	movwf	??_digitstellen+2
  2054  006A  3004               	movlw	4
  2055  006B  00F4               	movwf	??_digitstellen+1
  2056  006C  30BA               	movlw	186
  2057  006D  00F3               	movwf	??_digitstellen
  2058  006E                     u967:	
  2059  006E  0BF3               	decfsz	??_digitstellen,f
  2060  006F  286E               	goto	u967
  2061  0070  0BF4               	decfsz	??_digitstellen+1,f
  2062  0071  286E               	goto	u967
  2063  0072  0BF5               	decfsz	??_digitstellen+2,f
  2064  0073  286E               	goto	u967
  2065  0074  0000               	nop
  2066                           
  2067                           ;PIC_functions.c: 98: }
  2068                           ;PIC_functions.c: 99: while (tasterzahl==0);
  2069  0075  0020               	movlb	0	; select bank0
  2070  0076  0830               	movf	_tasterzahl,w
  2071  0077  0431               	iorwf	_tasterzahl+1,w
  2072  0078  1D03               	btfss	3,2
  2073  0079  28D7               	goto	l1599
  2074  007A  285E               	goto	l1559
  2075  007B                     l1563:	
  2076                           ;PIC_functions.c: 104: {
  2077                           ;PIC_functions.c: 105: case 1: ME=ME+1;
  2078                           
  2079                           ;PIC_functions.c: 103: switch (digit)
  2080                           
  2081  007B  0824               	movf	_ME,w
  2082  007C  3E01               	addlw	1
  2083  007D  00A4               	movwf	_ME
  2084  007E  3000               	movlw	0
  2085  007F  3D25               	addwfc	_ME+1,w
  2086  0080  00A5               	movwf	_ME+1
  2087                           
  2088                           ;PIC_functions.c: 106: if (ME>9) {ME=0;}
  2089  0081  3000               	movlw	0
  2090  0082  0225               	subwf	_ME+1,w
  2091  0083  300A               	movlw	10
  2092  0084  1903               	skipnz
  2093  0085  0224               	subwf	_ME,w
  2094  0086  1C03               	skipc
  2095  0087  2836               	goto	l1601
  2096  0088  01A4               	clrf	_ME
  2097  0089  01A5               	clrf	_ME+1
  2098                           
  2099                           ;PIC_functions.c: 108: break;
  2100  008A  2836               	goto	l1601
  2101  008B                     l1569:	
  2102                           ;PIC_functions.c: 110: case 2: MZ=MZ+1;
  2103                           
  2104  008B  0826               	movf	_MZ,w
  2105  008C  3E01               	addlw	1
  2106  008D  00A6               	movwf	_MZ
  2107  008E  3000               	movlw	0
  2108  008F  3D27               	addwfc	_MZ+1,w
  2109  0090  00A7               	movwf	_MZ+1
  2110                           
  2111                           ;PIC_functions.c: 111: if (MZ>5) {MZ=0;}
  2112  0091  3000               	movlw	0
  2113  0092  0227               	subwf	_MZ+1,w
  2114  0093  3006               	movlw	6
  2115  0094  1903               	skipnz
  2116  0095  0226               	subwf	_MZ,w
  2117  0096  1C03               	skipc
  2118  0097  2836               	goto	l1601
  2119  0098  01A6               	clrf	_MZ
  2120  0099  01A7               	clrf	_MZ+1
  2121                           
  2122                           ;PIC_functions.c: 113: break;
  2123  009A  2836               	goto	l1601
  2124  009B                     l1575:	
  2125                           ;PIC_functions.c: 115: case 3: HE=HE+1;
  2126                           
  2127  009B  0876               	movf	_HE,w
  2128  009C  3E01               	addlw	1
  2129  009D  00F6               	movwf	_HE
  2130  009E  3000               	movlw	0
  2131  009F  3D77               	addwfc	_HE+1,w
  2132  00A0  00F7               	movwf	_HE+1
  2133                           
  2134                           ;PIC_functions.c: 116: if ((HZ>1)&&(HE>3)) {HE=0;}
  2135  00A1  3000               	movlw	0
  2136  00A2  0279               	subwf	_HZ+1,w
  2137  00A3  3002               	movlw	2
  2138  00A4  1903               	skipnz
  2139  00A5  0278               	subwf	_HZ,w
  2140  00A6  1C03               	skipc
  2141  00A7  28AF               	goto	l1583
  2142  00A8  3000               	movlw	0
  2143  00A9  0277               	subwf	_HE+1,w
  2144  00AA  3004               	movlw	4
  2145  00AB  1903               	skipnz
  2146  00AC  0276               	subwf	_HE,w
  2147  00AD  1803               	btfsc	3,0
  2148  00AE  28B6               	goto	l1585
  2149  00AF                     l1583:	
  2150                           
  2151                           ;PIC_functions.c: 117: else if (HE>9) {HE=0;}
  2152  00AF  3000               	movlw	0
  2153  00B0  0277               	subwf	_HE+1,w
  2154  00B1  300A               	movlw	10
  2155  00B2  1903               	skipnz
  2156  00B3  0276               	subwf	_HE,w
  2157  00B4  1C03               	skipc
  2158  00B5  2836               	goto	l1601
  2159  00B6                     l1585:	
  2160  00B6  01F6               	clrf	_HE
  2161  00B7  01F7               	clrf	_HE+1
  2162                           
  2163                           ;PIC_functions.c: 119: break;
  2164  00B8  2836               	goto	l1601
  2165  00B9                     l1587:	
  2166                           ;PIC_functions.c: 120: case 4: HZ=HZ+1;
  2167                           
  2168  00B9  0878               	movf	_HZ,w
  2169  00BA  3E01               	addlw	1
  2170  00BB  00F8               	movwf	_HZ
  2171  00BC  3000               	movlw	0
  2172  00BD  3D79               	addwfc	_HZ+1,w
  2173  00BE  00F9               	movwf	_HZ+1
  2174                           
  2175                           ;PIC_functions.c: 121: if ((HE>3 && HZ >1)|| (HZ>2))
  2176  00BF  3000               	movlw	0
  2177  00C0  0277               	subwf	_HE+1,w
  2178  00C1  3004               	movlw	4
  2179  00C2  1903               	skipnz
  2180  00C3  0276               	subwf	_HE,w
  2181  00C4  1C03               	skipc
  2182  00C5  28CD               	goto	l1593
  2183  00C6  3000               	movlw	0
  2184  00C7  0279               	subwf	_HZ+1,w
  2185  00C8  3002               	movlw	2
  2186  00C9  1903               	skipnz
  2187  00CA  0278               	subwf	_HZ,w
  2188  00CB  1803               	skipnc
  2189  00CC  28D4               	goto	l1595
  2190  00CD                     l1593:	
  2191  00CD  3000               	movlw	0
  2192  00CE  0279               	subwf	_HZ+1,w
  2193  00CF  3003               	movlw	3
  2194  00D0  1903               	skipnz
  2195  00D1  0278               	subwf	_HZ,w
  2196  00D2  1C03               	skipc
  2197  00D3  2836               	goto	l1601
  2198  00D4                     l1595:	
  2199                           
  2200                           ;PIC_functions.c: 122: {
  2201                           ;PIC_functions.c: 123: HZ = 0;
  2202  00D4  01F8               	clrf	_HZ
  2203  00D5  01F9               	clrf	_HZ+1
  2204                           
  2205                           ;PIC_functions.c: 126: }
  2206                           
  2207                           ;PIC_functions.c: 124: }
  2208                           ;PIC_functions.c: 125: break;
  2209  00D6  2836               	goto	l1601
  2210  00D7                     l1599:	
  2211                           
  2212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2213                           ; Switch size 1, requested type "space"
  2214                           ; Number of cases is 1, Range of values is 0 to 0
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            4     3 (average)
  2218                           ; direct_byte            8     6 (fixed)
  2219                           ; jumptable            260     6 (fixed)
  2220                           ;	Chosen strategy is simple_byte
  2221  00D7  082D               	movf	_digit+1,w
  2222  00D8  3A00               	xorlw	0	; case 0
  2223  00D9  1903               	skipnz
  2224  00DA  28DC               	goto	l2065
  2225  00DB  2836               	goto	l1601
  2226  00DC                     l2065:	
  2227                           
  2228                           ; Switch size 1, requested type "space"
  2229                           ; Number of cases is 4, Range of values is 1 to 4
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte           13     7 (average)
  2233                           ; direct_byte           17     9 (fixed)
  2234                           ; jumptable            263     9 (fixed)
  2235                           ;	Chosen strategy is simple_byte
  2236  00DC  082C               	movf	_digit,w
  2237  00DD  3A01               	xorlw	1	; case 1
  2238  00DE  1903               	skipnz
  2239  00DF  287B               	goto	l1563
  2240  00E0  3A03               	xorlw	3	; case 2
  2241  00E1  1903               	skipnz
  2242  00E2  288B               	goto	l1569
  2243  00E3  3A01               	xorlw	1	; case 3
  2244  00E4  1903               	skipnz
  2245  00E5  289B               	goto	l1575
  2246  00E6  3A07               	xorlw	7	; case 4
  2247  00E7  1903               	skipnz
  2248  00E8  28B9               	goto	l1587
  2249  00E9  2836               	goto	l1601
  2250  00EA  2836               	goto	l1601
  2251  00EB                     l1603:	
  2252                           
  2253                           ;PIC_functions.c: 127: }
  2254                           ;PIC_functions.c: 128: }
  2255                           ;PIC_functions.c: 129: tasterzahl = PORTAbits.RA5;
  2256  00EB  0E0C               	swapf	12,w	;volatile
  2257  00EC  0C89               	rrf	9,f
  2258  00ED  3901               	andlw	1
  2259  00EE  00F3               	movwf	??_digitstellen
  2260  00EF  01F4               	clrf	??_digitstellen+1
  2261  00F0  0873               	movf	??_digitstellen,w
  2262  00F1  00B0               	movwf	_tasterzahl
  2263  00F2  0874               	movf	??_digitstellen+1,w
  2264  00F3  00B1               	movwf	_tasterzahl+1
  2265                           
  2266                           ;PIC_functions.c: 130: if (tasterpos==0)
  2267  00F4  082E               	movf	_tasterpos,w
  2268  00F5  042F               	iorwf	_tasterpos+1,w
  2269  00F6  1D03               	btfss	3,2
  2270  00F7  0008               	return
  2271                           
  2272                           ;PIC_functions.c: 131: {
  2273                           ;PIC_functions.c: 132: _delay((unsigned long)((100)*(8000000/4000.0)));
  2274  00F8  3002               	movlw	2
  2275  00F9  00F5               	movwf	??_digitstellen+2
  2276  00FA  3004               	movlw	4
  2277  00FB  00F4               	movwf	??_digitstellen+1
  2278  00FC  30BA               	movlw	186
  2279  00FD  00F3               	movwf	??_digitstellen
  2280  00FE                     u977:	
  2281  00FE  0BF3               	decfsz	??_digitstellen,f
  2282  00FF  28FE               	goto	u977
  2283  0100  0BF4               	decfsz	??_digitstellen+1,f
  2284  0101  28FE               	goto	u977
  2285  0102  0BF5               	decfsz	??_digitstellen+2,f
  2286  0103  28FE               	goto	u977
  2287  0104  0000               	nop
  2288  0105                     l1607:	
  2289                           ;PIC_functions.c: 133: do
  2290                           
  2291                           
  2292                           ;PIC_functions.c: 134: {
  2293                           ;PIC_functions.c: 135: tasterpos=PORTAbits.RA4;
  2294  0105  0020               	movlb	0	; select bank0
  2295  0106  0E0C               	swapf	12,w	;volatile
  2296  0107  3901               	andlw	1
  2297  0108  00F3               	movwf	??_digitstellen
  2298  0109  01F4               	clrf	??_digitstellen+1
  2299  010A  0873               	movf	??_digitstellen,w
  2300  010B  00AE               	movwf	_tasterpos
  2301  010C  0874               	movf	??_digitstellen+1,w
  2302  010D  00AF               	movwf	_tasterpos+1
  2303                           
  2304                           ;PIC_functions.c: 136: _delay((unsigned long)((100)*(8000000/4000.0)));
  2305  010E  3002               	movlw	2
  2306  010F  00F5               	movwf	??_digitstellen+2
  2307  0110  3004               	movlw	4
  2308  0111  00F4               	movwf	??_digitstellen+1
  2309  0112  30BA               	movlw	186
  2310  0113  00F3               	movwf	??_digitstellen
  2311  0114                     u987:	
  2312  0114  0BF3               	decfsz	??_digitstellen,f
  2313  0115  2914               	goto	u987
  2314  0116  0BF4               	decfsz	??_digitstellen+1,f
  2315  0117  2914               	goto	u987
  2316  0118  0BF5               	decfsz	??_digitstellen+2,f
  2317  0119  2914               	goto	u987
  2318  011A  0000               	nop
  2319                           
  2320                           ;PIC_functions.c: 138: }
  2321                           ;PIC_functions.c: 139: while(tasterpos ==0);
  2322  011B  0020               	movlb	0	; select bank0
  2323  011C  082E               	movf	_tasterpos,w
  2324  011D  042F               	iorwf	_tasterpos+1,w
  2325  011E  1D03               	btfss	3,2
  2326  011F  0008               	return
  2327  0120  2905               	goto	l1607
  2328  0121                     __end_of_digitstellen:	
  2329                           
  2330                           	psect	text4
  2331  03B6                     __ptext4:	
  2332 ;; *************** function _anzeigewechseln *****************
  2333 ;; Defined at:
  2334 ;;		line 72 in file "PIC_functions.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2348 ;;      Params:         0       0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    4
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function _anzeigewechseln
  2364  03B6                     _anzeigewechseln:	
  2365                           
  2366                           ;PIC_functions.c: 74: if (mux < 5)
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _anzeigewechseln: [wreg]
  2370  03B6  3000               	movlw	0
  2371  03B7  0020               	movlb	0	; select bank0
  2372  03B8  023A               	subwf	_mux+1,w
  2373  03B9  3005               	movlw	5
  2374  03BA  1903               	skipnz
  2375  03BB  0239               	subwf	_mux,w
  2376  03BC  1803               	skipnc
  2377  03BD  2BC3               	goto	l1713
  2378                           
  2379                           ;PIC_functions.c: 75: {
  2380                           ;PIC_functions.c: 76: mux = 5;
  2381  03BE  3005               	movlw	5
  2382  03BF  00B9               	movwf	_mux
  2383  03C0  3000               	movlw	0
  2384  03C1  00BA               	movwf	_mux+1
  2385                           
  2386                           ;PIC_functions.c: 77: }
  2387  03C2  0008               	return
  2388  03C3                     l1713:	
  2389                           
  2390                           ;PIC_functions.c: 78: else mux = 1;
  2391  03C3  3001               	movlw	1
  2392  03C4  00B9               	movwf	_mux
  2393  03C5  3000               	movlw	0
  2394  03C6  00BA               	movwf	_mux+1
  2395  03C7  0008               	return
  2396  03C8                     __end_of_anzeigewechseln:	
  2397                           
  2398                           	psect	text5
  2399  03E6                     __ptext5:	
  2400 ;; *************** function _SYSTEM_Initialize *****************
  2401 ;; Defined at:
  2402 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2416 ;;      Params:         0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    6
  2423 ;; This function calls:
  2424 ;;		_OSCILLATOR_Initialize
  2425 ;;		_PIN_MANAGER_Initialize
  2426 ;;		_TMR0_Initialize
  2427 ;;		_TMR2_Initialize
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _SYSTEM_Initialize
  2435  03E6                     _SYSTEM_Initialize:	
  2436                           
  2437                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2441  03E6  3183  2354  3183   	fcall	_PIN_MANAGER_Initialize
  2442                           
  2443                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2444  03E9  3184  2405  3183   	fcall	_OSCILLATOR_Initialize
  2445                           
  2446                           ;mcc.c: 74: TMR2_Initialize();
  2447  03EC  3183  2390  3183   	fcall	_TMR2_Initialize
  2448                           
  2449                           ;mcc.c: 75: TMR0_Initialize();
  2450  03EF  3183  23C8         	fcall	_TMR0_Initialize
  2451  03F1  0008               	return
  2452  03F2                     __end_of_SYSTEM_Initialize:	
  2453                           
  2454                           	psect	text6
  2455  0390                     __ptext6:	
  2456 ;; *************** function _TMR2_Initialize *****************
  2457 ;; Defined at:
  2458 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, pclath, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2472 ;;      Params:         0       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    5
  2479 ;; This function calls:
  2480 ;;		_TMR2_SetInterruptHandler
  2481 ;;		_TMR2_StartTimer
  2482 ;; This function is called by:
  2483 ;;		_SYSTEM_Initialize
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _TMR2_Initialize
  2489  0390                     _TMR2_Initialize:	
  2490                           
  2491                           ;tmr2.c: 63: T2CON = 0x1A;
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2495  0390  301A               	movlw	26
  2496  0391  0020               	movlb	0	; select bank0
  2497  0392  009C               	movwf	28	;volatile
  2498                           
  2499                           ;tmr2.c: 66: PR2 = 0xF9;
  2500  0393  30F9               	movlw	249
  2501  0394  009B               	movwf	27	;volatile
  2502                           
  2503                           ;tmr2.c: 69: TMR2 = 0x00;
  2504  0395  019A               	clrf	26	;volatile
  2505                           
  2506                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2507  0396  1091               	bcf	17,1	;volatile
  2508                           
  2509                           ;tmr2.c: 75: PIE1bits.TMR2IE = 1;
  2510  0397  0021               	movlb	1	; select bank1
  2511  0398  1491               	bsf	17,1	;volatile
  2512                           
  2513                           ;tmr2.c: 78: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2514  0399  3010               	movlw	low _TMR2_DefaultInterruptHandler
  2515  039A  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2516  039B  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2517  039C  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2518  039D  3183  23FF  3183   	fcall	_TMR2_SetInterruptHandler
  2519                           
  2520                           ;tmr2.c: 81: TMR2_StartTimer();
  2521  03A0  3184  240B         	fcall	_TMR2_StartTimer
  2522  03A2  0008               	return
  2523  03A3                     __end_of_TMR2_Initialize:	
  2524                           
  2525                           	psect	text7
  2526  040B                     __ptext7:	
  2527 ;; *************** function _TMR2_StartTimer *****************
  2528 ;; Defined at:
  2529 ;;		line 84 in file "mcc_generated_files/tmr2.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		None
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2543 ;;      Params:         0       0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    4
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_TMR2_Initialize
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _TMR2_StartTimer
  2559  040B                     _TMR2_StartTimer:	
  2560                           
  2561                           ;tmr2.c: 87: T2CONbits.TMR2ON = 1;
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _TMR2_StartTimer: []
  2565  040B  0020               	movlb	0	; select bank0
  2566  040C  151C               	bsf	28,2	;volatile
  2567  040D  0008               	return
  2568  040E                     __end_of_TMR2_StartTimer:	
  2569                           
  2570                           	psect	text8
  2571  03FF                     __ptext8:	
  2572 ;; *************** function _TMR2_SetInterruptHandler *****************
  2573 ;; Defined at:
  2574 ;;		line 145 in file "mcc_generated_files/tmr2.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  InterruptHan    2    3[COMMON] PTR void 
  2577 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2589 ;;      Params:         2       0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0
  2592 ;;      Totals:         2       0       0       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    4
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_TMR2_Initialize
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _TMR2_SetInterruptHandler
  2605  03FF                     _TMR2_SetInterruptHandler:	
  2606                           
  2607                           ;tmr2.c: 146: TMR2_InterruptHandler = InterruptHandler;
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2611  03FF  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2612  0400  0020               	movlb	0	; select bank0
  2613  0401  00B8               	movwf	_TMR2_InterruptHandler+1
  2614  0402  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2615  0403  00B7               	movwf	_TMR2_InterruptHandler
  2616  0404  0008               	return
  2617  0405                     __end_of_TMR2_SetInterruptHandler:	
  2618                           
  2619                           	psect	text9
  2620  03C8                     __ptext9:	
  2621 ;; *************** function _TMR0_Initialize *****************
  2622 ;; Defined at:
  2623 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2637 ;;      Params:         0       0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0
  2639 ;;      Temps:          1       0       0       0       0       0
  2640 ;;      Totals:         1       0       0       0       0       0
  2641 ;;Total ram usage:        1 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_SYSTEM_Initialize
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _TMR0_Initialize
  2653  03C8                     _TMR0_Initialize:	
  2654                           
  2655                           ;tmr0.c: 69: OPTION_REG = (OPTION_REG & 0xC0) | 0xD4 & 0x3F;
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2659  03C8  0021               	movlb	1	; select bank1
  2660  03C9  0815               	movf	21,w	;volatile
  2661  03CA  39C0               	andlw	192
  2662  03CB  3814               	iorlw	20
  2663  03CC  0095               	movwf	21	;volatile
  2664                           
  2665                           ;tmr0.c: 72: TMR0 = 0x60;
  2666  03CD  3060               	movlw	96
  2667  03CE  0020               	movlb	0	; select bank0
  2668  03CF  0095               	movwf	21	;volatile
  2669                           
  2670                           ;tmr0.c: 75: timer0ReloadVal= 96;
  2671  03D0  3060               	movlw	96
  2672  03D1  00F3               	movwf	??_TMR0_Initialize
  2673  03D2  0873               	movf	??_TMR0_Initialize,w
  2674  03D3  00FA               	movwf	_timer0ReloadVal	;volatile
  2675                           
  2676                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  2677  03D4  110B               	bcf	11,2	;volatile
  2678                           
  2679                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  2680  03D5  168B               	bsf	11,5	;volatile
  2681  03D6  0008               	return
  2682  03D7                     __end_of_TMR0_Initialize:	
  2683                           
  2684                           	psect	text10
  2685  0354                     __ptext10:	
  2686 ;; *************** function _PIN_MANAGER_Initialize *****************
  2687 ;; Defined at:
  2688 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2702 ;;      Params:         0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    4
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_SYSTEM_Initialize
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _PIN_MANAGER_Initialize
  2718  0354                     _PIN_MANAGER_Initialize:	
  2719                           
  2720                           ;pin_manager.c: 51: LATB = 0xFF;
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2724  0354  30FF               	movlw	255
  2725  0355  0022               	movlb	2	; select bank2
  2726  0356  008D               	movwf	13	;volatile
  2727                           
  2728                           ;pin_manager.c: 52: LATA = 0x4F;
  2729  0357  304F               	movlw	79
  2730  0358  008C               	movwf	12	;volatile
  2731                           
  2732                           ;pin_manager.c: 53: ANSELA = 0x0;
  2733  0359  0023               	movlb	3	; select bank3
  2734  035A  018C               	clrf	12	;volatile
  2735                           
  2736                           ;pin_manager.c: 54: ANSELB = 0x0;
  2737  035B  018D               	clrf	13	;volatile
  2738                           
  2739                           ;pin_manager.c: 55: WPUA = 0x0;
  2740  035C  0024               	movlb	4	; select bank4
  2741  035D  018C               	clrf	12	;volatile
  2742                           
  2743                           ;pin_manager.c: 56: WPUB = 0x0;
  2744  035E  018D               	clrf	13	;volatile
  2745                           
  2746                           ;pin_manager.c: 57: TRISB = 0x0;
  2747  035F  0021               	movlb	1	; select bank1
  2748  0360  018D               	clrf	13	;volatile
  2749                           
  2750                           ;pin_manager.c: 58: TRISA = 0xB0;
  2751  0361  30B0               	movlw	176
  2752  0362  008C               	movwf	12	;volatile
  2753                           
  2754                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x1;
  2755  0363  1795               	bsf	21,7	;volatile
  2756                           
  2757                           ;pin_manager.c: 61: APFCON0 = 0x00;
  2758  0364  0022               	movlb	2	; select bank2
  2759  0365  019D               	clrf	29	;volatile
  2760                           
  2761                           ;pin_manager.c: 62: APFCON1 = 0x00;
  2762  0366  019E               	clrf	30	;volatile
  2763  0367  0008               	return
  2764  0368                     __end_of_PIN_MANAGER_Initialize:	
  2765                           
  2766                           	psect	text11
  2767  0405                     __ptext11:	
  2768 ;; *************** function _OSCILLATOR_Initialize *****************
  2769 ;; Defined at:
  2770 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2784 ;;      Params:         0       0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    4
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_SYSTEM_Initialize
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _OSCILLATOR_Initialize
  2800  0405                     _OSCILLATOR_Initialize:	
  2801                           
  2802                           ;mcc.c: 81: OSCCON = 0x38;
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2806  0405  3038               	movlw	56
  2807  0406  0021               	movlb	1	; select bank1
  2808  0407  0099               	movwf	25	;volatile
  2809                           
  2810                           ;mcc.c: 83: OSCSTAT = 0x00;
  2811  0408  019A               	clrf	26	;volatile
  2812                           
  2813                           ;mcc.c: 85: OSCTUNE = 0x00;
  2814  0409  0198               	clrf	24	;volatile
  2815  040A  0008               	return
  2816  040B                     __end_of_OSCILLATOR_Initialize:	
  2817                           
  2818                           	psect	intentry
  2819  0004                     __pintentry:	
  2820 ;; *************** function _INTERRUPT_InterruptManager *****************
  2821 ;; Defined at:
  2822 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2836 ;;      Params:         0       0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0
  2838 ;;      Temps:          1       0       0       0       0       0
  2839 ;;      Totals:         1       0       0       0       0       0
  2840 ;;Total ram usage:        1 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    3
  2843 ;; This function calls:
  2844 ;;		_TMR0_ISR
  2845 ;;		_TMR2_ISR
  2846 ;; This function is called by:
  2847 ;;		Interrupt level 1
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851  0004                     _INTERRUPT_InterruptManager:	
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2855  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2856  0005  3180               	pagesel	$
  2857  0006  0020               	movlb	0	; select bank0
  2858  0007  087F               	movf	127,w
  2859  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  2860                           
  2861                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2862  0009  1A8B               	btfsc	11,5	;volatile
  2863  000A  1D0B               	btfss	11,2	;volatile
  2864  000B  2810               	goto	i1l95
  2865                           
  2866                           ;interrupt_manager.c: 55: {
  2867                           ;interrupt_manager.c: 56: TMR0_ISR();
  2868  000C  3183  23F2  3180   	fcall	_TMR0_ISR
  2869                           
  2870                           ;interrupt_manager.c: 57: }
  2871  000F  2818               	goto	i1l99
  2872  0010                     i1l95:	
  2873                           
  2874                           ;interrupt_manager.c: 58: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  2875  0010  0021               	movlb	1	; select bank1
  2876  0011  1C91               	btfss	17,1	;volatile
  2877  0012  2818               	goto	i1l99
  2878  0013  0020               	movlb	0	; select bank0
  2879  0014  1C91               	btfss	17,1	;volatile
  2880  0015  2818               	goto	i1l99
  2881                           
  2882                           ;interrupt_manager.c: 59: {
  2883                           ;interrupt_manager.c: 60: TMR2_ISR();
  2884  0016  3183  23A3         	fcall	_TMR2_ISR
  2885  0018                     i1l99:	
  2886                           ;interrupt_manager.c: 62: else
  2887                           ;interrupt_manager.c: 63: {
  2888                           
  2889                           ;interrupt_manager.c: 61: }
  2890                           
  2891  0018  0872               	movf	??_INTERRUPT_InterruptManager,w
  2892  0019  0020               	movlb	0	; select bank0
  2893  001A  00FF               	movwf	127
  2894  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2895  001C  0009               	retfie
  2896  001D                     __end_of_INTERRUPT_InterruptManager:	
  2897                           
  2898                           	psect	text13
  2899  03A3                     __ptext13:	
  2900 ;; *************** function _TMR2_ISR *****************
  2901 ;; Defined at:
  2902 ;;		line 116 in file "mcc_generated_files/tmr2.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2916 ;;      Params:         0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    2
  2923 ;; This function calls:
  2924 ;;		_TMR2_CallBack
  2925 ;; This function is called by:
  2926 ;;		_INTERRUPT_InterruptManager
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _TMR2_ISR
  2932  03A3                     _TMR2_ISR:	
  2933                           
  2934                           ;tmr2.c: 118: static volatile unsigned int CountCallBack = 0;
  2935                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2939  03A3  0020               	movlb	0	; select bank0
  2940  03A4  1091               	bcf	17,1	;volatile
  2941                           
  2942                           ;tmr2.c: 124: if (++CountCallBack >= 125)
  2943  03A5  3001               	movlw	1
  2944  03A6  07A0               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  2945  03A7  3000               	movlw	0
  2946  03A8  3DA1               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  2947  03A9  3000               	movlw	0
  2948  03AA  0221               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  2949  03AB  307D               	movlw	125
  2950  03AC  1903               	skipnz
  2951  03AD  0220               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  2952  03AE  1C03               	skipc
  2953  03AF  0008               	return
  2954                           
  2955                           ;tmr2.c: 125: {
  2956                           ;tmr2.c: 127: TMR2_CallBack();
  2957  03B0  3183  23D7         	fcall	_TMR2_CallBack
  2958                           
  2959                           ;tmr2.c: 130: CountCallBack = 0;
  2960  03B2  0020               	movlb	0	; select bank0
  2961  03B3  01A0               	clrf	TMR2_ISR@CountCallBack	;volatile
  2962  03B4  01A1               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  2963  03B5  0008               	return
  2964  03B6                     __end_of_TMR2_ISR:	
  2965                           
  2966                           	psect	text14
  2967  03D7                     __ptext14:	
  2968 ;; *************** function _TMR2_CallBack *****************
  2969 ;; Defined at:
  2970 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2984 ;;      Params:         0       0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    1
  2991 ;; This function calls:
  2992 ;;		Absolute function
  2993 ;;		_TMR2_DefaultInterruptHandler
  2994 ;; This function is called by:
  2995 ;;		_TMR2_ISR
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _TMR2_CallBack
  3001  03D7                     _TMR2_CallBack:	
  3002                           
  3003                           ;tmr2.c: 137: SE++;
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3007  03D7  3001               	movlw	1
  3008  03D8  0020               	movlb	0	; select bank0
  3009  03D9  07A8               	addwf	_SE,f
  3010  03DA  3000               	movlw	0
  3011  03DB  3DA9               	addwfc	_SE+1,f
  3012                           
  3013                           ;tmr2.c: 139: if(TMR2_InterruptHandler)
  3014  03DC  0837               	movf	_TMR2_InterruptHandler,w
  3015  03DD  0438               	iorwf	_TMR2_InterruptHandler+1,w
  3016  03DE  1903               	btfsc	3,2
  3017  03DF  0008               	return
  3018                           
  3019                           ;tmr2.c: 140: {
  3020                           ;tmr2.c: 141: TMR2_InterruptHandler();
  3021  03E0  0838               	movf	_TMR2_InterruptHandler+1,w
  3022  03E1  008A               	movwf	10
  3023  03E2  0837               	movf	_TMR2_InterruptHandler,w
  3024  03E3  000A               	callw
  3025  03E4  3183               	pagesel	$
  3026  03E5  0008               	return
  3027  03E6                     __end_of_TMR2_CallBack:	
  3028                           
  3029                           	psect	text15
  3030  0410                     __ptext15:	
  3031 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3032 ;; Defined at:
  3033 ;;		line 149 in file "mcc_generated_files/tmr2.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		None
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3047 ;;      Params:         0       0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_TMR2_Initialize
  3057 ;;		_TMR2_CallBack
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _TMR2_DefaultInterruptHandler
  3063  0410                     _TMR2_DefaultInterruptHandler:	
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3067  0410  0008               	return
  3068  0411                     __end_of_TMR2_DefaultInterruptHandler:	
  3069                           
  3070                           	psect	text16
  3071  03F2                     __ptext16:	
  3072 ;; *************** function _TMR0_ISR *****************
  3073 ;; Defined at:
  3074 ;;		line 106 in file "mcc_generated_files/tmr0.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3088 ;;      Params:         0       0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    2
  3095 ;; This function calls:
  3096 ;;		_uhrzeitanzeigen
  3097 ;; This function is called by:
  3098 ;;		_INTERRUPT_InterruptManager
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _TMR0_ISR
  3104  03F2                     _TMR0_ISR:	
  3105                           
  3106                           ;tmr0.c: 110: INTCONbits.TMR0IF = 0;
  3107                           
  3108                           ;incstack = 0
  3109                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3110  03F2  110B               	bcf	11,2	;volatile
  3111                           
  3112                           ;tmr0.c: 112: TMR0 = timer0ReloadVal;
  3113  03F3  087A               	movf	_timer0ReloadVal,w	;volatile
  3114  03F4  0020               	movlb	0	; select bank0
  3115  03F5  0095               	movwf	21	;volatile
  3116                           
  3117                           ;tmr0.c: 116: uhrzeitanzeigen();
  3118  03F6  3181  2121         	fcall	_uhrzeitanzeigen
  3119  03F8  0008               	return
  3120  03F9                     __end_of_TMR0_ISR:	
  3121                           
  3122                           	psect	text17
  3123  0121                     __ptext17:	
  3124 ;; *************** function _uhrzeitanzeigen *****************
  3125 ;; Defined at:
  3126 ;;		line 160 in file "PIC_functions.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3140 ;;      Params:         0       0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		_siebensegdek
  3149 ;; This function is called by:
  3150 ;;		_TMR0_ISR
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _uhrzeitanzeigen
  3156  0121                     _uhrzeitanzeigen:	
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _uhrzeitanzeigen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3160                           ;PIC_functions.c: 163: do { LATA0 = 1; } while(0);
  3161  0121  0022               	movlb	2	; select bank2
  3162  0122  140C               	bsf	12,0	;volatile
  3163                           
  3164                           ;PIC_functions.c: 164: do { LATA1 = 1; } while(0);
  3165  0123  148C               	bsf	12,1	;volatile
  3166                           
  3167                           ;PIC_functions.c: 165: do { LATA2 = 1; } while(0);
  3168  0124  150C               	bsf	12,2	;volatile
  3169                           
  3170                           ;PIC_functions.c: 166: do { LATA3 = 1; } while(0);
  3171  0125  158C               	bsf	12,3	;volatile
  3172                           
  3173                           ;PIC_functions.c: 168: switch(mux)
  3174  0126  29B7               	goto	i1l1547
  3175  0127                     i1l1497:	
  3176                           ;PIC_functions.c: 169: {
  3177                           ;PIC_functions.c: 170: case 1:
  3178                           
  3179                           
  3180                           ;PIC_functions.c: 172: zahl = ME;
  3181  0127  0020               	movlb	0	; select bank0
  3182  0128  0825               	movf	_ME+1,w
  3183  0129  00B3               	movwf	_zahl+1
  3184  012A  0824               	movf	_ME,w
  3185  012B  00B2               	movwf	_zahl
  3186                           
  3187                           ;PIC_functions.c: 173: siebensegdek(zahl);
  3188  012C  0833               	movf	_zahl+1,w
  3189  012D  00F1               	movwf	siebensegdek@zahl+1
  3190  012E  0832               	movf	_zahl,w
  3191  012F  00F0               	movwf	siebensegdek@zahl
  3192  0130  3182  2260  3181   	fcall	_siebensegdek
  3193                           
  3194                           ;PIC_functions.c: 174: if (digit ==1) {do { LATB7 = 0; } while(0);}
  3195  0133  0020               	movlb	0	; select bank0
  3196  0134  032C               	decf	_digit,w
  3197  0135  042D               	iorwf	_digit+1,w
  3198  0136  1D03               	btfss	3,2
  3199  0137  293A               	goto	i1l333
  3200  0138  0022               	movlb	2	; select bank2
  3201  0139  138D               	bcf	13,7	;volatile
  3202  013A                     i1l333:	
  3203                           ;PIC_functions.c: 175: do { LATA0 = 0; } while(0);
  3204                           
  3205  013A  0022               	movlb	2	; select bank2
  3206  013B  100C               	bcf	12,0	;volatile
  3207                           
  3208                           ;PIC_functions.c: 176: mux=2;
  3209  013C  3002               	movlw	2
  3210  013D  0020               	movlb	0	; select bank0
  3211  013E  00B9               	movwf	_mux
  3212  013F  3000               	movlw	0
  3213  0140  00BA               	movwf	_mux+1
  3214                           
  3215                           ;PIC_functions.c: 179: break;
  3216  0141  0008               	return
  3217  0142                     i1l1505:	
  3218                           ;PIC_functions.c: 182: case 2:
  3219                           
  3220                           
  3221                           ;PIC_functions.c: 184: zahl = MZ;
  3222  0142  0827               	movf	_MZ+1,w
  3223  0143  00B3               	movwf	_zahl+1
  3224  0144  0826               	movf	_MZ,w
  3225  0145  00B2               	movwf	_zahl
  3226                           
  3227                           ;PIC_functions.c: 185: siebensegdek(zahl);
  3228  0146  0833               	movf	_zahl+1,w
  3229  0147  00F1               	movwf	siebensegdek@zahl+1
  3230  0148  0832               	movf	_zahl,w
  3231  0149  00F0               	movwf	siebensegdek@zahl
  3232  014A  3182  2260  3181   	fcall	_siebensegdek
  3233                           
  3234                           ;PIC_functions.c: 186: if (digit ==2) {do { LATB7 = 0; } while(0);}
  3235  014D  3002               	movlw	2
  3236  014E  0020               	movlb	0	; select bank0
  3237  014F  062C               	xorwf	_digit,w
  3238  0150  042D               	iorwf	_digit+1,w
  3239  0151  1D03               	btfss	3,2
  3240  0152  2955               	goto	i1l340
  3241  0153  0022               	movlb	2	; select bank2
  3242  0154  138D               	bcf	13,7	;volatile
  3243  0155                     i1l340:	
  3244                           ;PIC_functions.c: 187: do { LATA1 = 0; } while(0);
  3245                           
  3246  0155  0022               	movlb	2	; select bank2
  3247  0156  108C               	bcf	12,1	;volatile
  3248                           
  3249                           ;PIC_functions.c: 188: mux=3;
  3250  0157  3003               	movlw	3
  3251  0158  0020               	movlb	0	; select bank0
  3252  0159  00B9               	movwf	_mux
  3253  015A  3000               	movlw	0
  3254  015B  00BA               	movwf	_mux+1
  3255                           
  3256                           ;PIC_functions.c: 190: break;
  3257  015C  0008               	return
  3258  015D                     i1l1513:	
  3259                           ;PIC_functions.c: 192: case 3:
  3260                           
  3261                           
  3262                           ;PIC_functions.c: 194: zahl = HE;
  3263  015D  0877               	movf	_HE+1,w
  3264  015E  00B3               	movwf	_zahl+1
  3265  015F  0876               	movf	_HE,w
  3266  0160  00B2               	movwf	_zahl
  3267                           
  3268                           ;PIC_functions.c: 195: siebensegdek(zahl);
  3269  0161  0833               	movf	_zahl+1,w
  3270  0162  00F1               	movwf	siebensegdek@zahl+1
  3271  0163  0832               	movf	_zahl,w
  3272  0164  00F0               	movwf	siebensegdek@zahl
  3273  0165  3182  2260  3181   	fcall	_siebensegdek
  3274                           
  3275                           ;PIC_functions.c: 196: if (digit ==3) {do { LATB7 = 0; } while(0);}
  3276  0168  3003               	movlw	3
  3277  0169  0020               	movlb	0	; select bank0
  3278  016A  062C               	xorwf	_digit,w
  3279  016B  042D               	iorwf	_digit+1,w
  3280  016C  1D03               	btfss	3,2
  3281  016D  2970               	goto	i1l346
  3282  016E  0022               	movlb	2	; select bank2
  3283  016F  138D               	bcf	13,7	;volatile
  3284  0170                     i1l346:	
  3285                           ;PIC_functions.c: 197: do { LATA2 = 0; } while(0);
  3286                           
  3287  0170  0022               	movlb	2	; select bank2
  3288  0171  110C               	bcf	12,2	;volatile
  3289                           
  3290                           ;PIC_functions.c: 198: mux=4;
  3291  0172  3004               	movlw	4
  3292  0173  0020               	movlb	0	; select bank0
  3293  0174  00B9               	movwf	_mux
  3294  0175  3000               	movlw	0
  3295  0176  00BA               	movwf	_mux+1
  3296                           
  3297                           ;PIC_functions.c: 201: break;
  3298  0177  0008               	return
  3299  0178                     i1l1521:	
  3300                           ;PIC_functions.c: 203: case 4:
  3301                           
  3302                           
  3303                           ;PIC_functions.c: 205: zahl = HZ;
  3304  0178  0879               	movf	_HZ+1,w
  3305  0179  00B3               	movwf	_zahl+1
  3306  017A  0878               	movf	_HZ,w
  3307  017B  00B2               	movwf	_zahl
  3308                           
  3309                           ;PIC_functions.c: 206: siebensegdek(zahl);
  3310  017C  0833               	movf	_zahl+1,w
  3311  017D  00F1               	movwf	siebensegdek@zahl+1
  3312  017E  0832               	movf	_zahl,w
  3313  017F  00F0               	movwf	siebensegdek@zahl
  3314  0180  3182  2260  3181   	fcall	_siebensegdek
  3315                           
  3316                           ;PIC_functions.c: 207: if (digit ==4) {do { LATB7 = 0; } while(0);}
  3317  0183  3004               	movlw	4
  3318  0184  0020               	movlb	0	; select bank0
  3319  0185  062C               	xorwf	_digit,w
  3320  0186  042D               	iorwf	_digit+1,w
  3321  0187  1D03               	btfss	3,2
  3322  0188  298B               	goto	i1l352
  3323  0189  0022               	movlb	2	; select bank2
  3324  018A  138D               	bcf	13,7	;volatile
  3325  018B                     i1l352:	
  3326                           ;PIC_functions.c: 208: do { LATA3 = 0; } while(0);
  3327                           
  3328  018B  0022               	movlb	2	; select bank2
  3329  018C  118C               	bcf	12,3	;volatile
  3330                           
  3331                           ;PIC_functions.c: 209: mux=1;
  3332  018D  3001               	movlw	1
  3333  018E  0020               	movlb	0	; select bank0
  3334  018F  00B9               	movwf	_mux
  3335  0190  3000               	movlw	0
  3336  0191  00BA               	movwf	_mux+1
  3337                           
  3338                           ;PIC_functions.c: 211: break;
  3339  0192  0008               	return
  3340  0193                     i1l1529:	
  3341                           ;PIC_functions.c: 212: case 5:
  3342                           
  3343                           
  3344                           ;PIC_functions.c: 214: zahl = SE;
  3345  0193  0829               	movf	_SE+1,w
  3346  0194  00B3               	movwf	_zahl+1
  3347  0195  0828               	movf	_SE,w
  3348  0196  00B2               	movwf	_zahl
  3349                           
  3350                           ;PIC_functions.c: 215: siebensegdek(zahl);
  3351  0197  0833               	movf	_zahl+1,w
  3352  0198  00F1               	movwf	siebensegdek@zahl+1
  3353  0199  0832               	movf	_zahl,w
  3354  019A  00F0               	movwf	siebensegdek@zahl
  3355  019B  3182  2260         	fcall	_siebensegdek
  3356                           
  3357                           ;PIC_functions.c: 216: do { LATA0 = 0; } while(0);
  3358  019D  0022               	movlb	2	; select bank2
  3359  019E  100C               	bcf	12,0	;volatile
  3360                           
  3361                           ;PIC_functions.c: 217: mux=6;
  3362  019F  3006               	movlw	6
  3363  01A0  0020               	movlb	0	; select bank0
  3364  01A1  00B9               	movwf	_mux
  3365  01A2  3000               	movlw	0
  3366  01A3  00BA               	movwf	_mux+1
  3367                           
  3368                           ;PIC_functions.c: 219: break;
  3369  01A4  0008               	return
  3370  01A5                     i1l1537:	
  3371                           ;PIC_functions.c: 220: case 6:
  3372                           
  3373                           
  3374                           ;PIC_functions.c: 222: zahl = SZ;
  3375  01A5  082B               	movf	_SZ+1,w
  3376  01A6  00B3               	movwf	_zahl+1
  3377  01A7  082A               	movf	_SZ,w
  3378  01A8  00B2               	movwf	_zahl
  3379                           
  3380                           ;PIC_functions.c: 223: siebensegdek(zahl);
  3381  01A9  0833               	movf	_zahl+1,w
  3382  01AA  00F1               	movwf	siebensegdek@zahl+1
  3383  01AB  0832               	movf	_zahl,w
  3384  01AC  00F0               	movwf	siebensegdek@zahl
  3385  01AD  3182  2260         	fcall	_siebensegdek
  3386                           
  3387                           ;PIC_functions.c: 224: do { LATA1 = 0; } while(0);
  3388  01AF  0022               	movlb	2	; select bank2
  3389  01B0  108C               	bcf	12,1	;volatile
  3390                           
  3391                           ;PIC_functions.c: 225: mux=5;
  3392  01B1  3005               	movlw	5
  3393  01B2  0020               	movlb	0	; select bank0
  3394  01B3  00B9               	movwf	_mux
  3395  01B4  3000               	movlw	0
  3396  01B5  00BA               	movwf	_mux+1
  3397                           
  3398                           ;PIC_functions.c: 231: }
  3399                           
  3400                           ;PIC_functions.c: 230: break;
  3401                           
  3402                           ;PIC_functions.c: 229: default:
  3403                           
  3404                           ;PIC_functions.c: 227: break;
  3405  01B6  0008               	return
  3406  01B7                     i1l1547:	
  3407                           
  3408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3409                           ; Switch size 1, requested type "space"
  3410                           ; Number of cases is 1, Range of values is 0 to 0
  3411                           ; switch strategies available:
  3412                           ; Name         Instructions Cycles
  3413                           ; simple_byte            4     3 (average)
  3414                           ; direct_byte            8     6 (fixed)
  3415                           ; jumptable            260     6 (fixed)
  3416                           ;	Chosen strategy is simple_byte
  3417  01B7  0020               	movlb	0	; select bank0
  3418  01B8  083A               	movf	_mux+1,w
  3419  01B9  3A00               	xorlw	0	; case 0
  3420  01BA  1903               	skipnz
  3421  01BB  29BD               	goto	i1l2067
  3422  01BC  29D1               	goto	i1l361
  3423  01BD                     i1l2067:	
  3424                           
  3425                           ; Switch size 1, requested type "space"
  3426                           ; Number of cases is 6, Range of values is 1 to 6
  3427                           ; switch strategies available:
  3428                           ; Name         Instructions Cycles
  3429                           ; simple_byte           19    10 (average)
  3430                           ; direct_byte           21     9 (fixed)
  3431                           ; jumptable            263     9 (fixed)
  3432                           ;	Chosen strategy is simple_byte
  3433  01BD  0839               	movf	_mux,w
  3434  01BE  3A01               	xorlw	1	; case 1
  3435  01BF  1903               	skipnz
  3436  01C0  2927               	goto	i1l1497
  3437  01C1  3A03               	xorlw	3	; case 2
  3438  01C2  1903               	skipnz
  3439  01C3  2942               	goto	i1l1505
  3440  01C4  3A01               	xorlw	1	; case 3
  3441  01C5  1903               	skipnz
  3442  01C6  295D               	goto	i1l1513
  3443  01C7  3A07               	xorlw	7	; case 4
  3444  01C8  1903               	skipnz
  3445  01C9  2978               	goto	i1l1521
  3446  01CA  3A01               	xorlw	1	; case 5
  3447  01CB  1903               	skipnz
  3448  01CC  2993               	goto	i1l1529
  3449  01CD  3A03               	xorlw	3	; case 6
  3450  01CE  1903               	skipnz
  3451  01CF  29A5               	goto	i1l1537
  3452  01D0  29D1               	goto	i1l361
  3453  01D1                     i1l361:	
  3454  01D1  0008               	return
  3455  01D2                     __end_of_uhrzeitanzeigen:	
  3456                           
  3457                           	psect	text18
  3458  0260                     __ptext18:	
  3459 ;; *************** function _siebensegdek *****************
  3460 ;; Defined at:
  3461 ;;		line 14 in file "PIC_functions.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  zahl            2    0[COMMON] unsigned int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3475 ;;      Params:         2       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0
  3478 ;;      Totals:         2       0       0       0       0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_uhrzeitanzeigen
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _siebensegdek
  3490  0260                     _siebensegdek:	
  3491                           
  3492                           ;PIC_functions.c: 16: if (DP==0)
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _siebensegdek: [wreg-fsr0h+status,2+status,0]
  3496  0260  0020               	movlb	0	; select bank0
  3497  0261  0822               	movf	_DP,w
  3498  0262  0423               	iorwf	_DP+1,w
  3499  0263  1903               	btfsc	3,2
  3500  0264  2A7C               	goto	i1l1425
  3501  0265  2A8B               	goto	i1l1427
  3502  0266                     i1l1405:	
  3503                           ;PIC_functions.c: 19: {
  3504                           ;PIC_functions.c: 20: case 0: LATB=0xC0;
  3505                           
  3506                           ;PIC_functions.c: 17: {
  3507                           ;PIC_functions.c: 18: switch (zahl)
  3508                           
  3509  0266  30C0               	movlw	192
  3510  0267  2A79               	goto	L9
  3511  0268                     i1l1407:	
  3512                           ;PIC_functions.c: 22: case 1: LATB=0xF9;
  3513                           
  3514                           ;PIC_functions.c: 21: break;
  3515                           
  3516  0268  30F9               	movlw	249
  3517  0269  2A79               	goto	L9
  3518  026A                     i1l1409:	
  3519                           ;PIC_functions.c: 24: case 2: LATB=0xA4;
  3520                           
  3521                           ;PIC_functions.c: 23: break;
  3522                           
  3523  026A  30A4               	movlw	164
  3524  026B  2A79               	goto	L9
  3525  026C                     i1l1411:	
  3526                           ;PIC_functions.c: 26: case 3: LATB=0xB0;
  3527                           
  3528                           ;PIC_functions.c: 25: break;
  3529                           
  3530  026C  30B0               	movlw	176
  3531  026D  2A79               	goto	L9
  3532  026E                     i1l1413:	
  3533                           ;PIC_functions.c: 28: case 4: LATB=0x99;
  3534                           
  3535                           ;PIC_functions.c: 27: break;
  3536                           
  3537  026E  3099               	movlw	153
  3538  026F  2A79               	goto	L9
  3539  0270                     i1l1415:	
  3540                           ;PIC_functions.c: 30: case 5: LATB=0x92;
  3541                           
  3542                           ;PIC_functions.c: 29: break;
  3543                           
  3544  0270  3092               	movlw	146
  3545  0271  2A79               	goto	L9
  3546  0272                     i1l1417:	
  3547                           ;PIC_functions.c: 32: case 6: LATB=0x82;
  3548                           
  3549                           ;PIC_functions.c: 31: break;
  3550                           
  3551  0272  3082               	movlw	130
  3552  0273  2A79               	goto	L9
  3553  0274                     i1l1419:	
  3554                           ;PIC_functions.c: 34: case 7: LATB=0xF8;
  3555                           
  3556                           ;PIC_functions.c: 33: break;
  3557                           
  3558  0274  30F8               	movlw	248
  3559  0275  2A79               	goto	L9
  3560  0276                     i1l1421:	
  3561                           ;PIC_functions.c: 36: case 8: LATB=0x80;
  3562                           
  3563                           ;PIC_functions.c: 35: break;
  3564                           
  3565  0276  3080               	movlw	128
  3566  0277  2A79               	goto	L9
  3567  0278                     i1l1423:	
  3568                           ;PIC_functions.c: 38: case 9: LATB=0x90;
  3569                           
  3570                           ;PIC_functions.c: 37: break;
  3571                           
  3572  0278  3090               	movlw	144
  3573  0279                     L9:	
  3574  0279  0022               	movlb	2	; select bank2
  3575  027A  008D               	movwf	13	;volatile
  3576                           
  3577                           ;PIC_functions.c: 41: }
  3578                           
  3579                           ;PIC_functions.c: 40: default: 1;
  3580                           
  3581                           ;PIC_functions.c: 39: break;
  3582  027B  2A8B               	goto	i1l1427
  3583  027C                     i1l1425:	
  3584                           
  3585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3586                           ; Switch size 1, requested type "space"
  3587                           ; Number of cases is 1, Range of values is 0 to 0
  3588                           ; switch strategies available:
  3589                           ; Name         Instructions Cycles
  3590                           ; simple_byte            4     3 (average)
  3591                           ; direct_byte            8     6 (fixed)
  3592                           ; jumptable            260     6 (fixed)
  3593                           ;	Chosen strategy is simple_byte
  3594  027C  0871               	movf	siebensegdek@zahl+1,w
  3595  027D  3A00               	xorlw	0	; case 0
  3596  027E  1903               	skipnz
  3597  027F  2A81               	goto	i1l2069
  3598  0280  2A8B               	goto	i1l1427
  3599  0281                     i1l2069:	
  3600                           
  3601                           ; Switch size 1, requested type "space"
  3602                           ; Number of cases is 10, Range of values is 0 to 9
  3603                           ; switch strategies available:
  3604                           ; Name         Instructions Cycles
  3605                           ; direct_byte           26     6 (fixed)
  3606                           ; simple_byte           31    16 (average)
  3607                           ; jumptable            260     6 (fixed)
  3608                           ;	Chosen strategy is direct_byte
  3609  0281  0870               	movf	siebensegdek@zahl,w
  3610  0282  0084               	movwf	4
  3611  0283  300A               	movlw	10
  3612  0284  0204               	subwf	4,w
  3613  0285  1803               	skipnc
  3614  0286  2A8B               	goto	i1l1427
  3615  0287  3183               	movlp	high i1S2071
  3616  0288  3504               	lslf	4,w
  3617  0289  3E68               	addlw	low i1S2071
  3618  028A  0082               	movwf	2
  3619  028B                     i1l1427:	
  3620                           
  3621                           ;PIC_functions.c: 42: }
  3622                           ;PIC_functions.c: 43: if (DP>0)
  3623  028B  0020               	movlb	0	; select bank0
  3624  028C  0822               	movf	_DP,w
  3625  028D  0423               	iorwf	_DP+1,w
  3626  028E  1903               	btfsc	3,2
  3627  028F  0008               	return
  3628  0290  2AB8               	goto	i1l1451
  3629  0291                     i1l1431:	
  3630                           ;PIC_functions.c: 47: {
  3631                           ;PIC_functions.c: 48: case 0: LATB=0x40;
  3632                           
  3633                           ;PIC_functions.c: 45: {
  3634                           ;PIC_functions.c: 46: switch (zahl)
  3635                           
  3636  0291  3040               	movlw	64
  3637  0292  0022               	movlb	2	; select bank2
  3638  0293  008D               	movwf	13	;volatile
  3639                           
  3640                           ;PIC_functions.c: 49: break;
  3641  0294  0008               	return
  3642  0295                     i1l1433:	
  3643                           ;PIC_functions.c: 50: case 1: LATB=0x79;
  3644                           
  3645  0295  3079               	movlw	121
  3646  0296  0022               	movlb	2	; select bank2
  3647  0297  008D               	movwf	13	;volatile
  3648                           
  3649                           ;PIC_functions.c: 51: break;
  3650  0298  0008               	return
  3651  0299                     i1l1435:	
  3652                           ;PIC_functions.c: 52: case 2: LATB=0x24;
  3653                           
  3654  0299  3024               	movlw	36
  3655  029A  0022               	movlb	2	; select bank2
  3656  029B  008D               	movwf	13	;volatile
  3657                           
  3658                           ;PIC_functions.c: 53: break;
  3659  029C  0008               	return
  3660  029D                     i1l1437:	
  3661                           ;PIC_functions.c: 54: case 3: LATB=0x30;
  3662                           
  3663  029D  3030               	movlw	48
  3664  029E  0022               	movlb	2	; select bank2
  3665  029F  008D               	movwf	13	;volatile
  3666                           
  3667                           ;PIC_functions.c: 55: break;
  3668  02A0  0008               	return
  3669  02A1                     i1l1439:	
  3670                           ;PIC_functions.c: 56: case 4: LATB=0x19;
  3671                           
  3672  02A1  3019               	movlw	25
  3673  02A2  0022               	movlb	2	; select bank2
  3674  02A3  008D               	movwf	13	;volatile
  3675                           
  3676                           ;PIC_functions.c: 57: break;
  3677  02A4  0008               	return
  3678  02A5                     i1l1441:	
  3679                           ;PIC_functions.c: 58: case 5: LATB=0x12;
  3680                           
  3681  02A5  3012               	movlw	18
  3682  02A6  0022               	movlb	2	; select bank2
  3683  02A7  008D               	movwf	13	;volatile
  3684                           
  3685                           ;PIC_functions.c: 59: break;
  3686  02A8  0008               	return
  3687  02A9                     i1l1443:	
  3688                           ;PIC_functions.c: 60: case 6: LATB=0x02;
  3689                           
  3690  02A9  3002               	movlw	2
  3691  02AA  0022               	movlb	2	; select bank2
  3692  02AB  008D               	movwf	13	;volatile
  3693                           
  3694                           ;PIC_functions.c: 61: break;
  3695  02AC  0008               	return
  3696  02AD                     i1l1445:	
  3697                           ;PIC_functions.c: 62: case 7: LATB=0x78;
  3698                           
  3699  02AD  3078               	movlw	120
  3700  02AE  0022               	movlb	2	; select bank2
  3701  02AF  008D               	movwf	13	;volatile
  3702                           
  3703                           ;PIC_functions.c: 63: break;
  3704  02B0  0008               	return
  3705  02B1                     i1l1447:	
  3706                           ;PIC_functions.c: 64: case 8: LATB=0x00;
  3707                           
  3708  02B1  0022               	movlb	2	; select bank2
  3709  02B2  018D               	clrf	13	;volatile
  3710                           
  3711                           ;PIC_functions.c: 65: break;
  3712  02B3  0008               	return
  3713  02B4                     i1l1449:	
  3714                           ;PIC_functions.c: 66: case 9: LATB=0x10;
  3715                           
  3716  02B4  3010               	movlw	16
  3717  02B5  0022               	movlb	2	; select bank2
  3718  02B6  008D               	movwf	13	;volatile
  3719                           
  3720                           ;PIC_functions.c: 69: }
  3721                           
  3722                           ;PIC_functions.c: 68: default:1;
  3723                           
  3724                           ;PIC_functions.c: 67: break;
  3725  02B7  0008               	return
  3726  02B8                     i1l1451:	
  3727                           
  3728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3729                           ; Switch size 1, requested type "space"
  3730                           ; Number of cases is 1, Range of values is 0 to 0
  3731                           ; switch strategies available:
  3732                           ; Name         Instructions Cycles
  3733                           ; simple_byte            4     3 (average)
  3734                           ; direct_byte            8     6 (fixed)
  3735                           ; jumptable            260     6 (fixed)
  3736                           ;	Chosen strategy is simple_byte
  3737  02B8  0871               	movf	siebensegdek@zahl+1,w
  3738  02B9  3A00               	xorlw	0	; case 0
  3739  02BA  1903               	skipnz
  3740  02BB  2ABD               	goto	i1l2073
  3741  02BC  2AC8               	goto	i1l281
  3742  02BD                     i1l2073:	
  3743                           
  3744                           ; Switch size 1, requested type "space"
  3745                           ; Number of cases is 10, Range of values is 0 to 9
  3746                           ; switch strategies available:
  3747                           ; Name         Instructions Cycles
  3748                           ; direct_byte           26     6 (fixed)
  3749                           ; simple_byte           31    16 (average)
  3750                           ; jumptable            260     6 (fixed)
  3751                           ;	Chosen strategy is direct_byte
  3752  02BD  0870               	movf	siebensegdek@zahl,w
  3753  02BE  0084               	movwf	4
  3754  02BF  300A               	movlw	10
  3755  02C0  0204               	subwf	4,w
  3756  02C1  1803               	skipnc
  3757  02C2  0008               	return
  3758  02C3  3183               	movlp	high i1S2075
  3759  02C4  3504               	lslf	4,w
  3760  02C5  3E7C               	addlw	low i1S2075
  3761  02C6  0082               	movwf	2
  3762  02C7  0008               	return
  3763  02C8                     i1l281:	
  3764  02C8  0008               	return
  3765  02C9                     __end_of_siebensegdek:	
  3766  007E                     btemp	set	126	;btemp
  3767  007E                     int$flags	set	126
  3768  007E                     wtemp	set	126
  3769  007E                     wtemp0	set	126
  3770  0080                     wtemp1	set	128
  3771  0082                     wtemp2	set	130
  3772  0084                     wtemp3	set	132
  3773  0086                     wtemp4	set	134
  3774  0088                     wtemp5	set	136
  3775  007F                     wtemp6	set	127
  3776  007E                     ttemp	set	126
  3777  007E                     ttemp0	set	126
  3778  0081                     ttemp1	set	129
  3779  0084                     ttemp2	set	132
  3780  0087                     ttemp3	set	135
  3781  007F                     ttemp4	set	127
  3782  007E                     ltemp	set	126
  3783  007E                     ltemp0	set	126
  3784  0082                     ltemp1	set	130
  3785  0086                     ltemp2	set	134
  3786  0080                     ltemp3	set	128
  3787                           
  3788                           	psect	swtext1
  3789  0368                     __pswtext1:	
  3790  0368                     i1S2071:	
  3791  0368  3182  2A66         	ljmp	i1l1405
  3792  036A  3182  2A68         	ljmp	i1l1407
  3793  036C  3182  2A6A         	ljmp	i1l1409
  3794  036E  3182  2A6C         	ljmp	i1l1411
  3795  0370  3182  2A6E         	ljmp	i1l1413
  3796  0372  3182  2A70         	ljmp	i1l1415
  3797  0374  3182  2A72         	ljmp	i1l1417
  3798  0376  3182  2A74         	ljmp	i1l1419
  3799  0378  3182  2A76         	ljmp	i1l1421
  3800  037A  3182  2A78         	ljmp	i1l1423
  3801                           
  3802                           	psect	swtext2
  3803  037C                     __pswtext2:	
  3804  037C                     i1S2075:	
  3805  037C  3182  2A91         	ljmp	i1l1431
  3806  037E  3182  2A95         	ljmp	i1l1433
  3807  0380  3182  2A99         	ljmp	i1l1435
  3808  0382  3182  2A9D         	ljmp	i1l1437
  3809  0384  3182  2AA1         	ljmp	i1l1439
  3810  0386  3182  2AA5         	ljmp	i1l1441
  3811  0388  3182  2AA9         	ljmp	i1l1443
  3812  038A  3182  2AAD         	ljmp	i1l1445
  3813  038C  3182  2AB1         	ljmp	i1l1447
  3814  038E  3182  2AB4         	ljmp	i1l1449


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      3      27
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _uhrstellen->_digitstellen
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _uhrzeitanzeigen->_siebensegdek

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      75
                                              0 BANK0      3     3      0
                  _SYSTEM_Initialize
                    _anzeigewechseln
                         _uhrstellen
                        _uhrzweivier
 ---------------------------------------------------------------------------------
 (1) _uhrzweivier                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uhrstellen                                           0     0      0       0
                       _digitstellen
 ---------------------------------------------------------------------------------
 (2) _digitstellen                                         3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _anzeigewechseln                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      75
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      75
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      75
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     362
                                              2 COMMON     1     1      0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     362
                    _uhrzeitanzeigen
 ---------------------------------------------------------------------------------
 (6) _uhrzeitanzeigen                                      0     0      0     362
                       _siebensegdek
 ---------------------------------------------------------------------------------
 (7) _siebensegdek                                         2     0      2     362
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
   _anzeigewechseln
   _uhrstellen
     _digitstellen
   _uhrzweivier

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _uhrzeitanzeigen
       _siebensegdek
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      26       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      1B       6       33.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      26      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jul 20 07:00:43 2016

        __end_of_TMR2_SetInterruptHandler 0405                                         pc 0002  
                             __CFG_CP$OFF 0000                                        _HE 0076  
                                      _DP 0022                                        _ME 0024  
                                      _HZ 0078                                        _SE 0028  
                                      _MZ 0026                                        _SZ 002A  
                         _timer0ReloadVal 007A                                       l203 025C  
                                     l197 0229                                       _PR2 001B  
                            __CFG_CPD$OFF 0000                                       u917 0204  
                                     u927 021A                                       u937 0236  
                                     u947 024D                                       u957 0057  
                                     u967 006E                                       u977 00FE  
                                     u987 0114                                       _mux 0039  
                         _TMR2_Initialize 0390                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            __CFG_LVP$OFF 0000                                      l2065 00DC  
                                    l1601 0036                                      l1603 00EB  
                                    l1607 0105                                      l1713 03C3  
                                    l1563 007B                                      l1901 01D7  
                                    l1583 00AF                                      l1575 009B  
                                    l1559 005E                                      l1593 00CD  
                                    l1585 00B6                                      l1569 008B  
                                    l1595 00D4                                      l1587 00B9  
                                    l1907 01E3                                      l1925 022C  
                                    l1909 01E5                                      l1599 00D7  
                                    l1687 031D                                      l1919 020B  
                                    l1929 023D                                      _LATA 010C  
                                    _LATB 010D                                      i1l95 0010  
                                    i1l99 0018                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUB 020D                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 01D2  
                             _uhrzweivier 02C9                                      _zahl 0032  
                                    fsr0h 0005                                      fsr0l 0004  
                                    indf0 0000                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 001D                                      ttemp 007E  
                                    wtemp 007E                             __CFG_FOSC$ECH 0000  
                 __end_of_TMR0_Initialize 03D7            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 040B                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                                     _T2CON 001C  
                                   _LATA0 0860                                     _LATA1 0861  
                                   _LATA2 0862                                     _LATA3 0863  
                                   _LATB7 086F                                     i1l340 0155  
                                   i1l333 013A                                     i1l352 018B  
                                   i1l281 02C8                                     i1l361 01D1  
                                   i1l346 0170                                     _TRISA 008C  
                                   _TRISB 008D                          __end_of_TMR0_ISR 03F9  
                        __end_of_TMR2_ISR 03B6                          ?_anzeigewechseln 0070  
                                   _digit 002C                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           _TMR2_StartTimer 040B  
                          __CFG_MCLRE$OFF 0000                           __initialization 001F  
                            __end_of_main 0260                   __end_of_TMR2_Initialize 03A3  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 03FF  
                                  ??_main 0034                            __CFG_PLLEN$OFF 0000  
                    __end_of_digitstellen 0121                                    i1S2071 0368  
                                  i1S2075 037C                                    _ANSELA 018C  
                                  _ANSELB 018D                                    i1l1411 026C  
                                  i1l1421 0276                                    i1l1413 026E  
                                  i1l1405 0266                                    i1l1431 0291  
                                  i1l1423 0278                                    i1l1415 0270  
                                  i1l1407 0268                                    i1l2073 02BD  
                                  i1l1441 02A5                                    i1l1433 0295  
                                  i1l1417 0272                                    i1l1409 026A  
                                  i1l1425 027C                                    i1l1521 0178  
                                  i1l1513 015D                                    i1l1505 0142  
                                  i1l1443 02A9                                    i1l1435 0299  
                                  i1l1451 02B8                                    i1l1419 0274  
                                  i1l1427 028B                                    i1l2067 01BD  
                                  i1l1445 02AD                                    i1l1437 029D  
                                  i1l2069 0281                                    i1l1447 02B1  
                                  i1l1439 02A1                                    i1l1449 02B4  
                                  i1l1537 01A5                                    i1l1529 0193  
                                  i1l1547 01B7                                    i1l1497 0127  
                                  _OSCCON 0099                            __CFG_PWRTE$OFF 0000  
                          __CFG_STVREN$ON 0000                          ?_TMR0_Initialize 0070  
                __size_of_uhrzeitanzeigen 00B1                   __end_of_TMR2_StartTimer 040E  
TMR2_SetInterruptHandler@InterruptHandler 0073                         _SYSTEM_Initialize 03E6  
                 __end_of__initialization 0032                     __end_of_TMR2_CallBack 03E6  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                            __pidataBANK0 040E                       ??_SYSTEM_Initialize 0075  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                        ?_TMR2_Initialize 0070                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 03F2                          siebensegdek@zahl 0070  
                              __pbssBANK0 0020                              ?_uhrzweivier 0070  
                              __pnvCOMMON 007A                                __pmaintext 01D2  
                              ??_TMR0_ISR 0072                                ??_TMR2_ISR 0070  
                              __pintentry 0004                     __size_of_digitstellen 00EB  
                           ?_siebensegdek 0070                                   _APFCON0 011D  
                                 _APFCON1 011E                         ??_uhrzeitanzeigen 0072  
                                 _OSCSTAT 009A                                   _OSCTUNE 0098  
                        ?_TMR2_StartTimer 0070                              _digitstellen 0036  
              ??_TMR2_SetInterruptHandler 0075                            ??_siebensegdek 0072  
                                 __ptext1 02C9                                   __ptext2 0329  
                                 __ptext3 0036                                   __ptext4 03B6  
                                 __ptext5 03E6                                   __ptext6 0390  
                                 __ptext7 040B                                   __ptext8 03FF  
                                 __ptext9 03C8                     _OSCILLATOR_Initialize 0405  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 0073  
              __size_of_SYSTEM_Initialize 000C                                   clrloop0 03FA  
                    end_of_initialization 0032                  __size_of_anzeigewechseln 0012  
                              _tasterzahl 0030                                 _PORTAbits 000C  
                              _uhrstellen 0329                      __size_of_uhrzweivier 0060  
    __end_of_TMR2_DefaultInterruptHandler 0411     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0410                         __size_of_TMR0_ISR 0007  
                       __size_of_TMR2_ISR 0013                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 001F                  __size_of_TMR0_Initialize 000F  
         __size_of_PIN_MANAGER_Initialize 0014                      __end_of_siebensegdek 02C9  
                       ??_anzeigewechseln 0073                               __pdataBANK0 0039  
                         _uhrzeitanzeigen 0121             ?_TMR2_DefaultInterruptHandler 0070  
                  __size_of_TMR2_CallBack 000F                               __pbssCOMMON 0076  
                               ___latbits 0001                             __pcstackBANK0 0034  
                __size_of_TMR2_Initialize 0013                               ?_uhrstellen 0070  
                               __pnvBANK0 0037                    _PIN_MANAGER_Initialize 0354  
            ??_INTERRUPT_InterruptManager 0072                                 __pswtext1 0368  
                               __pswtext2 037C                         ??_TMR0_Initialize 0073  
                               clear_ram0 03F9                             _TMR2_CallBack 03D7  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
                 __end_of_uhrzeitanzeigen 01D2       __size_of_INTERRUPT_InterruptManager 0019  
                                _PIR1bits 0011                                 _tasterpos 002E  
                                _TMR0_ISR 03F2                                  _TMR2_ISR 03A3  
                     __size_of_uhrstellen 002B            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                 ?_TMR2_SetInterruptHandler 0073  
                   __size_of_siebensegdek 0069                         ??_TMR2_Initialize 0075  
                          ?_TMR2_CallBack 0070                   ??_OSCILLATOR_Initialize 0073  
                            _siebensegdek 0260                                  __ptext10 0354  
                                __ptext11 0405                                  __ptext13 03A3  
                                __ptext14 03D7                                  __ptext15 0410  
                                __ptext16 03F2                                  __ptext17 0121  
                                __ptext18 0260                             ??_uhrzweivier 0073  
                         _anzeigewechseln 03B6                             __size_of_main 008E  
                        ?_uhrzeitanzeigen 0070                                  int$flags 007E  
                       ??_TMR2_StartTimer 0073        __end_of_INTERRUPT_InterruptManager 001D  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                                intlevel1 0000                           ??_TMR2_CallBack 0070  
                            ??_uhrstellen 0076                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                             ?_digitstellen 0070  
                     __end_of_uhrzweivier 0329                                _OPTION_REG 0095  
                      __end_of_uhrstellen 0354                     TMR2_ISR@CountCallBack 0020  
                         _TMR0_Initialize 03C8                   __end_of_anzeigewechseln 03C8  
          __end_of_PIN_MANAGER_Initialize 0368                            ??_digitstellen 0073  
                   _TMR2_InterruptHandler 0037  
